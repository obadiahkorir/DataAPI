//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CUEReceiver.CuePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CuePortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal")]
    public partial class CuePortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLearningOutcome2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationAreasEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpecializationAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VlidateDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VlidateDeliveryMode2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGradingSystem2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentsPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngeneratecodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKnownStakeHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewStakeHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStrengthOrWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesComposition1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrusteeSenateCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHRSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDevelopmentTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSchoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSchoolDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSourceOfIncomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditorsDebtorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActualBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaAcademicProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaCollaboratingAcademicProgrammeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQaProgrammeSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKenyanInternationalStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffQualityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptRejectPeerReviewerJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerReviewersEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPeerReviewersEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetVendornNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramAccreditationAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionCreateinvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentDraftOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSanitationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUtilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditRoadAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditRecreatonalOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPlantsEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdminSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForProgramAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPartTimeAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePartTimeAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStudentsResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInitialProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReferenceMaterialOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSuccessfulAppealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExpectedActualAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCreditorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDebtorsAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAppealsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchoolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUniversityChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentsResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstitutionNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResearchBudgetRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEelevatedWaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUtilityServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPlantsEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSanitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccessRoadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSanitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUtilityServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccessRoadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlantsEquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFireOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSponsorOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditKeyMilestonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSchoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPhilosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddschoolFacultiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditVCDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProgramApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWasteManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitialGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramRationaleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CuePortal() {
            this.Url = global::CUEReceiver.Properties.Settings.Default.CUEReceiver_CuePortal_CuePortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddLearningOutcomeCompletedEventHandler AddLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateLearningOutcomeCompletedEventHandler ValidateLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateLearningOutcome2CompletedEventHandler ValidateLearningOutcome2Completed;
        
        /// <remarks/>
        public event AddLearningOutcomeEntryCompletedEventHandler AddLearningOutcomeEntryCompleted;
        
        /// <remarks/>
        public event AddSpecializationAreasCompletedEventHandler AddSpecializationAreasCompleted;
        
        /// <remarks/>
        public event ValidateSpecializationAreasCompletedEventHandler ValidateSpecializationAreasCompleted;
        
        /// <remarks/>
        public event AddSpecializationAreasEntryCompletedEventHandler AddSpecializationAreasEntryCompleted;
        
        /// <remarks/>
        public event EditLearningOutcomeCompletedEventHandler EditLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteLearningOutcomeCompletedEventHandler DeleteLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteSpecializationAreaCompletedEventHandler DeleteSpecializationAreaCompleted;
        
        /// <remarks/>
        public event AddDeliveryModeCompletedEventHandler AddDeliveryModeCompleted;
        
        /// <remarks/>
        public event VlidateDeliveryModeCompletedEventHandler VlidateDeliveryModeCompleted;
        
        /// <remarks/>
        public event VlidateDeliveryMode2CompletedEventHandler VlidateDeliveryMode2Completed;
        
        /// <remarks/>
        public event DeleteDeliveryModeCompletedEventHandler DeleteDeliveryModeCompleted;
        
        /// <remarks/>
        public event AddGradingSystemCompletedEventHandler AddGradingSystemCompleted;
        
        /// <remarks/>
        public event ValidateGradingSystemCompletedEventHandler ValidateGradingSystemCompleted;
        
        /// <remarks/>
        public event ValidateGradingSystem2CompletedEventHandler ValidateGradingSystem2Completed;
        
        /// <remarks/>
        public event EditGradingSystemCompletedEventHandler EditGradingSystemCompleted;
        
        /// <remarks/>
        public event DeleteGradingSystemCompletedEventHandler DeleteGradingSystemCompleted;
        
        /// <remarks/>
        public event AddUnitCompletedEventHandler AddUnitCompleted;
        
        /// <remarks/>
        public event ValidateUnitCompletedEventHandler ValidateUnitCompleted;
        
        /// <remarks/>
        public event AddUnitEntryCompletedEventHandler AddUnitEntryCompleted;
        
        /// <remarks/>
        public event EditUnitCompletedEventHandler EditUnitCompleted;
        
        /// <remarks/>
        public event DeleteUnitCompletedEventHandler DeleteUnitCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodCompletedEventHandler AddInstructionalMethodCompleted;
        
        /// <remarks/>
        public event ValidateInstructionalMethodCompletedEventHandler ValidateInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodEntryCompletedEventHandler AddInstructionalMethodEntryCompleted;
        
        /// <remarks/>
        public event DeleteInstructionalMethodCompletedEventHandler DeleteInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeCompletedEventHandler AddCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event ValidateCourseLearningOutcomeCompletedEventHandler ValidateCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeEntryCompletedEventHandler AddCourseLearningOutcomeEntryCompleted;
        
        /// <remarks/>
        public event EditCourseLearningOutcomeCompletedEventHandler EditCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteCourseLearningOutcomeCompletedEventHandler DeleteCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddBookCompletedEventHandler AddBookCompleted;
        
        /// <remarks/>
        public event ValidateBookCompletedEventHandler ValidateBookCompleted;
        
        /// <remarks/>
        public event AddBookEntryCompletedEventHandler AddBookEntryCompleted;
        
        /// <remarks/>
        public event EditBookCompletedEventHandler EditBookCompleted;
        
        /// <remarks/>
        public event DeleteBookCompletedEventHandler DeleteBookCompleted;
        
        /// <remarks/>
        public event SaveDocumentsPaymentCompletedEventHandler SaveDocumentsPaymentCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsProgrammeCompletedEventHandler ConfirmPaymentsProgrammeCompleted;
        
        /// <remarks/>
        public event FngeneratecodesCompletedEventHandler FngeneratecodesCompleted;
        
        /// <remarks/>
        public event AddKnownStakeHolderCompletedEventHandler AddKnownStakeHolderCompleted;
        
        /// <remarks/>
        public event AddNewStakeHolderCompletedEventHandler AddNewStakeHolderCompleted;
        
        /// <remarks/>
        public event AddStrengthOrWeaknessCompletedEventHandler AddStrengthOrWeaknessCompleted;
        
        /// <remarks/>
        public event AddSARCommitteesComposition1CompletedEventHandler AddSARCommitteesComposition1Completed;
        
        /// <remarks/>
        public event AddSARCommitteesCompositionCompletedEventHandler AddSARCommitteesCompositionCompleted;
        
        /// <remarks/>
        public event AddTrusteeSenateCompositionCompletedEventHandler AddTrusteeSenateCompositionCompleted;
        
        /// <remarks/>
        public event AddHRSummaryCompletedEventHandler AddHRSummaryCompleted;
        
        /// <remarks/>
        public event AddDevelopmentTrainingCompletedEventHandler AddDevelopmentTrainingCompleted;
        
        /// <remarks/>
        public event AddSchoolCompletedEventHandler AddSchoolCompleted;
        
        /// <remarks/>
        public event AddSchoolDepartmentCompletedEventHandler AddSchoolDepartmentCompleted;
        
        /// <remarks/>
        public event AddSourceOfIncomeCompletedEventHandler AddSourceOfIncomeCompleted;
        
        /// <remarks/>
        public event AddCreditorsDebtorsCompletedEventHandler AddCreditorsDebtorsCompleted;
        
        /// <remarks/>
        public event AddActualBudgetCompletedEventHandler AddActualBudgetCompleted;
        
        /// <remarks/>
        public event AddDebtEquityCurrentAssetsLiabilitiesCompletedEventHandler AddDebtEquityCurrentAssetsLiabilitiesCompleted;
        
        /// <remarks/>
        public event AddQaAcademicProgrammeCompletedEventHandler AddQaAcademicProgrammeCompleted;
        
        /// <remarks/>
        public event AddQaCollaboratingAcademicProgrammeCompletedEventHandler AddQaCollaboratingAcademicProgrammeCompleted;
        
        /// <remarks/>
        public event AddQaProgrammeSummaryCompletedEventHandler AddQaProgrammeSummaryCompleted;
        
        /// <remarks/>
        public event AddKenyanInternationalStudentsCompletedEventHandler AddKenyanInternationalStudentsCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffQualityCompletedEventHandler AddAcademicStaffQualityCompleted;
        
        /// <remarks/>
        public event AcceptRejectPeerReviewerJobCompletedEventHandler AcceptRejectPeerReviewerJobCompleted;
        
        /// <remarks/>
        public event AddPeerReviewersEvaluationCompletedEventHandler AddPeerReviewersEvaluationCompleted;
        
        /// <remarks/>
        public event FnEditPeerReviewersEvaluationCompletedEventHandler FnEditPeerReviewersEvaluationCompleted;
        
        /// <remarks/>
        public event FnSendPeerApprovalRequestCompletedEventHandler FnSendPeerApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnRegisterPeerReviewerCompletedEventHandler FnRegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event FnGetVendornNumberCompletedEventHandler FnGetVendornNumberCompleted;
        
        /// <remarks/>
        public event GetApplicationNumberCompletedEventHandler GetApplicationNumberCompleted;
        
        /// <remarks/>
        public event ProgramAccreditationAlertCompletedEventHandler ProgramAccreditationAlertCompleted;
        
        /// <remarks/>
        public event GetProgramApplicationNumberCompletedEventHandler GetProgramApplicationNumberCompleted;
        
        /// <remarks/>
        public event InstitutionCreateinvoiceCompletedEventHandler InstitutionCreateinvoiceCompleted;
        
        /// <remarks/>
        public event AddCommentsCompletedEventHandler AddCommentsCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentCompletedEventHandler ConfirmPaymentCompleted;
        
        /// <remarks/>
        public event ProgramConfirmPaymentCompletedEventHandler ProgramConfirmPaymentCompleted;
        
        /// <remarks/>
        public event AddStudentDraftCompletedEventHandler AddStudentDraftCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event DeleteStudentCompletedEventHandler DeleteStudentCompleted;
        
        /// <remarks/>
        public event EditSanitationsCompletedEventHandler EditSanitationsCompleted;
        
        /// <remarks/>
        public event EditUtilityCompletedEventHandler EditUtilityCompleted;
        
        /// <remarks/>
        public event EditBuildingCompletedEventHandler EditBuildingCompleted;
        
        /// <remarks/>
        public event EditFireCompletedEventHandler EditFireCompleted;
        
        /// <remarks/>
        public event EditRoadAccessCompletedEventHandler EditRoadAccessCompleted;
        
        /// <remarks/>
        public event EditRecreatonalCompletedEventHandler EditRecreatonalCompleted;
        
        /// <remarks/>
        public event EditPlantsEquipmentsCompletedEventHandler EditPlantsEquipmentsCompleted;
        
        /// <remarks/>
        public event EditWasteManagementCompletedEventHandler EditWasteManagementCompleted;
        
        /// <remarks/>
        public event EditLibraryCompletedEventHandler EditLibraryCompleted;
        
        /// <remarks/>
        public event AddAdminSpaceCompletedEventHandler AddAdminSpaceCompleted;
        
        /// <remarks/>
        public event InstitutionSignupCompletedEventHandler InstitutionSignupCompleted;
        
        /// <remarks/>
        public event ApplyForAccreditationCompletedEventHandler ApplyForAccreditationCompleted;
        
        /// <remarks/>
        public event ApplyForProgramAccreditationCompletedEventHandler ApplyForProgramAccreditationCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffCompletedEventHandler AddAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteAcademicStaffCompletedEventHandler DeleteAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddNonAcademicStaffCompletedEventHandler AddNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddPartTimeAcademicStaffCompletedEventHandler AddPartTimeAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteNonAcademicStaffCompletedEventHandler DeleteNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeletePartTimeAcademicStaffCompletedEventHandler DeletePartTimeAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteResearchCompletedEventHandler DeleteResearchCompleted;
        
        /// <remarks/>
        public event DeleteStudentsResearchCompletedEventHandler DeleteStudentsResearchCompleted;
        
        /// <remarks/>
        public event AddInitialProgramsCompletedEventHandler AddInitialProgramsCompleted;
        
        /// <remarks/>
        public event AddReferenceMaterialCompletedEventHandler AddReferenceMaterialCompleted;
        
        /// <remarks/>
        public event AddDisciplineCaseCompletedEventHandler AddDisciplineCaseCompleted;
        
        /// <remarks/>
        public event AddSuccessfulAppealsCompletedEventHandler AddSuccessfulAppealsCompleted;
        
        /// <remarks/>
        public event EditDisciplineCaseCompletedEventHandler EditDisciplineCaseCompleted;
        
        /// <remarks/>
        public event AddExpectedActualAmountsCompletedEventHandler AddExpectedActualAmountsCompleted;
        
        /// <remarks/>
        public event AddCreditorsAmountsCompletedEventHandler AddCreditorsAmountsCompleted;
        
        /// <remarks/>
        public event AddDebtorsAmountsCompletedEventHandler AddDebtorsAmountsCompleted;
        
        /// <remarks/>
        public event DeleteDisciplineCaseCompletedEventHandler DeleteDisciplineCaseCompleted;
        
        /// <remarks/>
        public event DeleteAppealsCompletedEventHandler DeleteAppealsCompleted;
        
        /// <remarks/>
        public event DeleteChancellorsCompletedEventHandler DeleteChancellorsCompleted;
        
        /// <remarks/>
        public event DeleteSponsorsCompletedEventHandler DeleteSponsorsCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentsCompletedEventHandler DeleteDepartmentsCompleted;
        
        /// <remarks/>
        public event DeleteSchoolsCompletedEventHandler DeleteSchoolsCompleted;
        
        /// <remarks/>
        public event DeleteAffiliationsCompletedEventHandler DeleteAffiliationsCompleted;
        
        /// <remarks/>
        public event AddFinancialSubmissionCompletedEventHandler AddFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event DeleteFinancialSubmissionCompletedEventHandler DeleteFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event AddResearchCompletedEventHandler AddResearchCompleted;
        
        /// <remarks/>
        public event AddUniversityChancellorsCompletedEventHandler AddUniversityChancellorsCompleted;
        
        /// <remarks/>
        public event AddStudentsResearchCompletedEventHandler AddStudentsResearchCompleted;
        
        /// <remarks/>
        public event EditResearchCompletedEventHandler EditResearchCompleted;
        
        /// <remarks/>
        public event RegisterPeerReviewerCompletedEventHandler RegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerCompletedEventHandler UpdatePeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerPasswordCompletedEventHandler UpdatePeerReviewerPasswordCompleted;
        
        /// <remarks/>
        public event AddPeerAcademicQualificationsCompletedEventHandler AddPeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddPeerEmploymentRecordCompletedEventHandler AddPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event EditPeerEmploymentRecordCompletedEventHandler EditPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event DeletePeerEmploymentRecordCompletedEventHandler DeletePeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event GetInstitutionNumberCompletedEventHandler GetInstitutionNumberCompleted;
        
        /// <remarks/>
        public event AddOperationBudgetCompletedEventHandler AddOperationBudgetCompleted;
        
        /// <remarks/>
        public event AddResearchBudgetRecordCompletedEventHandler AddResearchBudgetRecordCompleted;
        
        /// <remarks/>
        public event AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler AddCurrentAssetsLiabilitiesEquitytRecordCompleted;
        
        /// <remarks/>
        public event AddLandCompletedEventHandler AddLandCompleted;
        
        /// <remarks/>
        public event AddFireCompletedEventHandler AddFireCompleted;
        
        /// <remarks/>
        public event AddEelevatedWaterCompletedEventHandler AddEelevatedWaterCompleted;
        
        /// <remarks/>
        public event AddUtilityServiceCompletedEventHandler AddUtilityServiceCompleted;
        
        /// <remarks/>
        public event AddPlantsEquipmentCompletedEventHandler AddPlantsEquipmentCompleted;
        
        /// <remarks/>
        public event AddRecreationCompletedEventHandler AddRecreationCompleted;
        
        /// <remarks/>
        public event AddSanitationCompletedEventHandler AddSanitationCompleted;
        
        /// <remarks/>
        public event AddAccessRoadsCompletedEventHandler AddAccessRoadsCompleted;
        
        /// <remarks/>
        public event AddLibraryCompletedEventHandler AddLibraryCompleted;
        
        /// <remarks/>
        public event DeleteLandCompletedEventHandler DeleteLandCompleted;
        
        /// <remarks/>
        public event DeleteSanitationCompletedEventHandler DeleteSanitationCompleted;
        
        /// <remarks/>
        public event DeleteUtilityServiceCompletedEventHandler DeleteUtilityServiceCompleted;
        
        /// <remarks/>
        public event DeleteLibraryCompletedEventHandler DeleteLibraryCompleted;
        
        /// <remarks/>
        public event DeleteAccessRoadsCompletedEventHandler DeleteAccessRoadsCompleted;
        
        /// <remarks/>
        public event DeleteWasteManagementCompletedEventHandler DeleteWasteManagementCompleted;
        
        /// <remarks/>
        public event DeletePlantsEquipmentsCompletedEventHandler DeletePlantsEquipmentsCompleted;
        
        /// <remarks/>
        public event DeleteRecreationCompletedEventHandler DeleteRecreationCompleted;
        
        /// <remarks/>
        public event DeleteFireCompletedEventHandler DeleteFireCompleted;
        
        /// <remarks/>
        public event DeleteBuildingCompletedEventHandler DeleteBuildingCompleted;
        
        /// <remarks/>
        public event DeleteReferenceCompletedEventHandler DeleteReferenceCompleted;
        
        /// <remarks/>
        public event EditLandCompletedEventHandler EditLandCompleted;
        
        /// <remarks/>
        public event EditChancellorsCompletedEventHandler EditChancellorsCompleted;
        
        /// <remarks/>
        public event EditAffiliationsCompletedEventHandler EditAffiliationsCompleted;
        
        /// <remarks/>
        public event EditSponsorCompletedEventHandler EditSponsorCompleted;
        
        /// <remarks/>
        public event EditKeyMilestonesCompletedEventHandler EditKeyMilestonesCompleted;
        
        /// <remarks/>
        public event EditSchoolCompletedEventHandler EditSchoolCompleted;
        
        /// <remarks/>
        public event EditDepartmentCompletedEventHandler EditDepartmentCompleted;
        
        /// <remarks/>
        public event EditGeneralDetailsCompletedEventHandler EditGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddMissionDetailsCompletedEventHandler AddMissionDetailsCompleted;
        
        /// <remarks/>
        public event AddPhilosophyCompletedEventHandler AddPhilosophyCompleted;
        
        /// <remarks/>
        public event AddMilestoneCompletedEventHandler AddMilestoneCompleted;
        
        /// <remarks/>
        public event AddAffiliationsCompletedEventHandler AddAffiliationsCompleted;
        
        /// <remarks/>
        public event AddschoolFacultiesCompletedEventHandler AddschoolFacultiesCompleted;
        
        /// <remarks/>
        public event AddDepartmentsCompletedEventHandler AddDepartmentsCompleted;
        
        /// <remarks/>
        public event AddSponsorsCompletedEventHandler AddSponsorsCompleted;
        
        /// <remarks/>
        public event AddHistoryCompletedEventHandler AddHistoryCompleted;
        
        /// <remarks/>
        public event EditVCDetailsCompletedEventHandler EditVCDetailsCompleted;
        
        /// <remarks/>
        public event AddLibraryStaffCompletedEventHandler AddLibraryStaffCompleted;
        
        /// <remarks/>
        public event DeleteLibraryStaffCompletedEventHandler DeleteLibraryStaffCompleted;
        
        /// <remarks/>
        public event AddGraduationCompletedEventHandler AddGraduationCompleted;
        
        /// <remarks/>
        public event SendApprovalRequestCompletedEventHandler SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event SendProgramApprovalRequestCompletedEventHandler SendProgramApprovalRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectRequestCompletedEventHandler ApproveRejectRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectProgramRequestCompletedEventHandler ApproveRejectProgramRequestCompleted;
        
        /// <remarks/>
        public event CancelApprovalProgramRequestCompletedEventHandler CancelApprovalProgramRequestCompleted;
        
        /// <remarks/>
        public event CancelApprovalRequestCompletedEventHandler CancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event AddBuildingCompletedEventHandler AddBuildingCompleted;
        
        /// <remarks/>
        public event AddWasteManagementCompletedEventHandler AddWasteManagementCompleted;
        
        /// <remarks/>
        public event AccreditationGeneralDetailsCompletedEventHandler AccreditationGeneralDetailsCompleted;
        
        /// <remarks/>
        public event InitialGeneralDetailsCompletedEventHandler InitialGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddNewProgramsCompletedEventHandler AddNewProgramsCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleCompletedEventHandler AddProgramRationaleCompleted;
        
        /// <remarks/>
        public event ValidateProgramRationaleCompletedEventHandler ValidateProgramRationaleCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleEntryCompletedEventHandler AddProgramRationaleEntryCompleted;
        
        /// <remarks/>
        public event EditProgramRationaleCompletedEventHandler EditProgramRationaleCompleted;
        
        /// <remarks/>
        public event EditSpecializationAreasCompletedEventHandler EditSpecializationAreasCompleted;
        
        /// <remarks/>
        public event DeleteProgramRationaleCompletedEventHandler DeleteProgramRationaleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcome(string accreditationNo, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string userCode, string password) {
            this.AddLearningOutcomeAsync(accreditationNo, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeOperationCompleted == null)) {
                this.AddLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password}, this.AddLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeCompleted(this, new AddLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateLearningOutcome(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLearningOutcomeAsync(string accreditationNo, string userCode, string password) {
            this.ValidateLearningOutcomeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateLearningOutcomeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateLearningOutcomeOperationCompleted == null)) {
                this.ValidateLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("ValidateLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnValidateLearningOutcomeOperationCompleted(object arg) {
            if ((this.ValidateLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLearningOutcomeCompleted(this, new ValidateLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateLearningOutcome2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateLearningOutcome2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateLearningOutcome2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password) {
            this.ValidateLearningOutcome2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateLearningOutcome2OperationCompleted == null)) {
                this.ValidateLearningOutcome2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLearningOutcome2OperationCompleted);
            }
            this.InvokeAsync("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateLearningOutcome2OperationCompleted, userState);
        }
        
        private void OnValidateLearningOutcome2OperationCompleted(object arg) {
            if ((this.ValidateLearningOutcome2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLearningOutcome2Completed(this, new ValidateLearningOutcome2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcomeEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcomeEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcomeEntry(string accreditationNo, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcomeEntry", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeEntryAsync(string accreditationNo, string outcomeDescription, string userCode, string password) {
            this.AddLearningOutcomeEntryAsync(accreditationNo, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeEntryAsync(string accreditationNo, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeEntryOperationCompleted == null)) {
                this.AddLearningOutcomeEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeEntryOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcomeEntry", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        userCode,
                        password}, this.AddLearningOutcomeEntryOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeEntryOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeEntryCompleted(this, new AddLearningOutcomeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSpecializationAreas(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            object[] results = this.Invoke("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            this.AddSpecializationAreasAsync(accreditationNo, specializationdescription, specializationaraea, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password, object userState) {
            if ((this.AddSpecializationAreasOperationCompleted == null)) {
                this.AddSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password}, this.AddSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnAddSpecializationAreasOperationCompleted(object arg) {
            if ((this.AddSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationAreasCompleted(this, new AddSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateSpecializationAreas(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateSpecializationAreas", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSpecializationAreasAsync(string accreditationNo, string userCode, string password) {
            this.ValidateSpecializationAreasAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateSpecializationAreasAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateSpecializationAreasOperationCompleted == null)) {
                this.ValidateSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("ValidateSpecializationAreas", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnValidateSpecializationAreasOperationCompleted(object arg) {
            if ((this.ValidateSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSpecializationAreasCompleted(this, new ValidateSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSpecializationAreasEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSpecializationAreasEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSpecializationAreasEntry(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            object[] results = this.Invoke("AddSpecializationAreasEntry", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpecializationAreasEntryAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password) {
            this.AddSpecializationAreasEntryAsync(accreditationNo, specializationdescription, specializationaraea, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAreasEntryAsync(string accreditationNo, string specializationdescription, string specializationaraea, string userCode, string password, object userState) {
            if ((this.AddSpecializationAreasEntryOperationCompleted == null)) {
                this.AddSpecializationAreasEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationAreasEntryOperationCompleted);
            }
            this.InvokeAsync("AddSpecializationAreasEntry", new object[] {
                        accreditationNo,
                        specializationdescription,
                        specializationaraea,
                        userCode,
                        password}, this.AddSpecializationAreasEntryOperationCompleted, userState);
        }
        
        private void OnAddSpecializationAreasEntryOperationCompleted(object arg) {
            if ((this.AddSpecializationAreasEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationAreasEntryCompleted(this, new AddSpecializationAreasEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLearningOutcome(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            this.EditLearningOutcomeAsync(accreditationNo, outcomeCode, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.EditLearningOutcomeOperationCompleted == null)) {
                this.EditLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password}, this.EditLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLearningOutcomeCompleted(this, new EditLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLearningOutcome(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, string userCode, string password) {
            this.DeleteLearningOutcomeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.DeleteLearningOutcomeOperationCompleted == null)) {
                this.DeleteLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.DeleteLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLearningOutcomeCompleted(this, new DeleteLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSpecializationArea", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSpecializationArea_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteSpecializationArea(string accreditationNo, int specializationcode, string userCode, string password) {
            object[] results = this.Invoke("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password) {
            this.DeleteSpecializationAreaAsync(accreditationNo, specializationcode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password, object userState) {
            if ((this.DeleteSpecializationAreaOperationCompleted == null)) {
                this.DeleteSpecializationAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpecializationAreaOperationCompleted);
            }
            this.InvokeAsync("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password}, this.DeleteSpecializationAreaOperationCompleted, userState);
        }
        
        private void OnDeleteSpecializationAreaOperationCompleted(object arg) {
            if ((this.DeleteSpecializationAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpecializationAreaCompleted(this, new DeleteSpecializationAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddDeliveryModeOperationCompleted == null)) {
                this.AddDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddDeliveryModeOperationCompleted, userState);
        }
        
        private void OnAddDeliveryModeOperationCompleted(object arg) {
            if ((this.AddDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeliveryModeCompleted(this, new AddDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VlidateDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VlidateDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VlidateDeliveryMode(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("VlidateDeliveryMode", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VlidateDeliveryModeAsync(string accreditationNo, string userCode, string password) {
            this.VlidateDeliveryModeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void VlidateDeliveryModeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.VlidateDeliveryModeOperationCompleted == null)) {
                this.VlidateDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVlidateDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("VlidateDeliveryMode", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.VlidateDeliveryModeOperationCompleted, userState);
        }
        
        private void OnVlidateDeliveryModeOperationCompleted(object arg) {
            if ((this.VlidateDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VlidateDeliveryModeCompleted(this, new VlidateDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VlidateDeliveryMode2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VlidateDeliveryMode2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VlidateDeliveryMode2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password) {
            this.VlidateDeliveryMode2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.VlidateDeliveryMode2OperationCompleted == null)) {
                this.VlidateDeliveryMode2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVlidateDeliveryMode2OperationCompleted);
            }
            this.InvokeAsync("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.VlidateDeliveryMode2OperationCompleted, userState);
        }
        
        private void OnVlidateDeliveryMode2OperationCompleted(object arg) {
            if ((this.VlidateDeliveryMode2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VlidateDeliveryMode2Completed(this, new VlidateDeliveryMode2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.DeleteDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.DeleteDeliveryModeOperationCompleted == null)) {
                this.DeleteDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.DeleteDeliveryModeOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryModeOperationCompleted(object arg) {
            if ((this.DeleteDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryModeCompleted(this, new DeleteDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGradingSystem(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.AddGradingSystemAsync(accreditationNo, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.AddGradingSystemOperationCompleted == null)) {
                this.AddGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGradingSystemOperationCompleted);
            }
            this.InvokeAsync("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.AddGradingSystemOperationCompleted, userState);
        }
        
        private void OnAddGradingSystemOperationCompleted(object arg) {
            if ((this.AddGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGradingSystemCompleted(this, new AddGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateGradingSystem(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateGradingSystem", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGradingSystemAsync(string accreditationNo, string userCode, string password) {
            this.ValidateGradingSystemAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateGradingSystemAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateGradingSystemOperationCompleted == null)) {
                this.ValidateGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGradingSystemOperationCompleted);
            }
            this.InvokeAsync("ValidateGradingSystem", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateGradingSystemOperationCompleted, userState);
        }
        
        private void OnValidateGradingSystemOperationCompleted(object arg) {
            if ((this.ValidateGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGradingSystemCompleted(this, new ValidateGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateGradingSystem2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateGradingSystem2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateGradingSystem2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password) {
            this.ValidateGradingSystem2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateGradingSystem2OperationCompleted == null)) {
                this.ValidateGradingSystem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGradingSystem2OperationCompleted);
            }
            this.InvokeAsync("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateGradingSystem2OperationCompleted, userState);
        }
        
        private void OnValidateGradingSystem2OperationCompleted(object arg) {
            if ((this.ValidateGradingSystem2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGradingSystem2Completed(this, new ValidateGradingSystem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGradingSystem(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.EditGradingSystemAsync(accreditationNo, code, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.EditGradingSystemOperationCompleted == null)) {
                this.EditGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGradingSystemOperationCompleted);
            }
            this.InvokeAsync("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.EditGradingSystemOperationCompleted, userState);
        }
        
        private void OnEditGradingSystemOperationCompleted(object arg) {
            if ((this.EditGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGradingSystemCompleted(this, new EditGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGradingSystem(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteGradingSystemAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGradingSystemOperationCompleted == null)) {
                this.DeleteGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGradingSystemOperationCompleted);
            }
            this.InvokeAsync("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteGradingSystemOperationCompleted, userState);
        }
        
        private void OnDeleteGradingSystemOperationCompleted(object arg) {
            if ((this.DeleteGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGradingSystemCompleted(this, new DeleteGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnit(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            object[] results = this.Invoke("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitAsync(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            this.AddUnitAsync(accreditationNo, unitCode, unitTitle, creditHours, yearCode, courseCategory, coursecontent, instructional, courseassessment, recommendedref, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddUnitAsync(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password, object userState) {
            if ((this.AddUnitOperationCompleted == null)) {
                this.AddUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitOperationCompleted);
            }
            this.InvokeAsync("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password}, this.AddUnitOperationCompleted, userState);
        }
        
        private void OnAddUnitOperationCompleted(object arg) {
            if ((this.AddUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitCompleted(this, new AddUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateUnit(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateUnit", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUnitAsync(string accreditationNo, string userCode, string password) {
            this.ValidateUnitAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateUnitAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateUnitOperationCompleted == null)) {
                this.ValidateUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUnitOperationCompleted);
            }
            this.InvokeAsync("ValidateUnit", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateUnitOperationCompleted, userState);
        }
        
        private void OnValidateUnitOperationCompleted(object arg) {
            if ((this.ValidateUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUnitCompleted(this, new ValidateUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnitEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnitEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnitEntry(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            object[] results = this.Invoke("AddUnitEntry", new object[] {
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitEntryAsync(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password) {
            this.AddUnitEntryAsync(unitCode, unitTitle, creditHours, yearCode, courseCategory, coursecontent, instructional, courseassessment, recommendedref, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddUnitEntryAsync(string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string coursecontent, string instructional, string courseassessment, string recommendedref, string userCode, string password, object userState) {
            if ((this.AddUnitEntryOperationCompleted == null)) {
                this.AddUnitEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitEntryOperationCompleted);
            }
            this.InvokeAsync("AddUnitEntry", new object[] {
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        userCode,
                        password}, this.AddUnitEntryOperationCompleted, userState);
        }
        
        private void OnAddUnitEntryOperationCompleted(object arg) {
            if ((this.AddUnitEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitEntryCompleted(this, new AddUnitEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditUnit(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            object[] results = this.Invoke("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUnitAsync(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            this.EditUnitAsync(accreditationNo, code, unitCode, unitTitle, creditHours, yearCode, courseCategory, comments, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditUnitAsync(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password, object userState) {
            if ((this.EditUnitOperationCompleted == null)) {
                this.EditUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUnitOperationCompleted);
            }
            this.InvokeAsync("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password}, this.EditUnitOperationCompleted, userState);
        }
        
        private void OnEditUnitOperationCompleted(object arg) {
            if ((this.EditUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUnitCompleted(this, new EditUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteUnit(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteUnitAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteUnitOperationCompleted == null)) {
                this.DeleteUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteUnitOperationCompleted, userState);
        }
        
        private void OnDeleteUnitOperationCompleted(object arg) {
            if ((this.DeleteUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUnitCompleted(this, new DeleteUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethod(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodOperationCompleted == null)) {
                this.AddInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodCompleted(this, new AddInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateInstructionalMethod(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password) {
            this.ValidateInstructionalMethodAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateInstructionalMethodOperationCompleted == null)) {
                this.ValidateInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnValidateInstructionalMethodOperationCompleted(object arg) {
            if ((this.ValidateInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateInstructionalMethodCompleted(this, new ValidateInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethodEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethodEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethodEntry(string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodEntryAsync(deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodEntryOperationCompleted == null)) {
                this.AddInstructionalMethodEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodEntryOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodEntryOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodEntryOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodEntryCompleted(this, new AddInstructionalMethodEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteInstructionalMethod(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteInstructionalMethodAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteInstructionalMethodOperationCompleted == null)) {
                this.DeleteInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnDeleteInstructionalMethodOperationCompleted(object arg) {
            if ((this.DeleteInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInstructionalMethodCompleted(this, new DeleteInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcome(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeAsync(accreditationNo, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeOperationCompleted == null)) {
                this.AddCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeCompleted(this, new AddCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateCourseLearningOutcome(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateCourseLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCourseLearningOutcomeAsync(string accreditationNo, string userCode, string password) {
            this.ValidateCourseLearningOutcomeAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateCourseLearningOutcomeAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateCourseLearningOutcomeOperationCompleted == null)) {
                this.ValidateCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("ValidateCourseLearningOutcome", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnValidateCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.ValidateCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCourseLearningOutcomeCompleted(this, new ValidateCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcomeEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcomeEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcomeEntry(string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcomeEntry", new object[] {
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeEntryAsync(string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeEntryAsync(learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeEntryAsync(string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeEntryOperationCompleted == null)) {
                this.AddCourseLearningOutcomeEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeEntryOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcomeEntry", new object[] {
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeEntryOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeEntryOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeEntryCompleted(this, new AddCourseLearningOutcomeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCourseLearningOutcome(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.EditCourseLearningOutcomeAsync(accreditationNo, code, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.EditCourseLearningOutcomeOperationCompleted == null)) {
                this.EditCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.EditCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCourseLearningOutcomeCompleted(this, new EditCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCourseLearningOutcome(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteCourseLearningOutcomeAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCourseLearningOutcomeOperationCompleted == null)) {
                this.DeleteCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseLearningOutcomeCompleted(this, new DeleteCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBook(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookAsync(accreditationNo, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookOperationCompleted == null)) {
                this.AddBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookOperationCompleted);
            }
            this.InvokeAsync("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookOperationCompleted, userState);
        }
        
        private void OnAddBookOperationCompleted(object arg) {
            if ((this.AddBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookCompleted(this, new AddBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateBook(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password) {
            this.ValidateBookAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateBookOperationCompleted == null)) {
                this.ValidateBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBookOperationCompleted);
            }
            this.InvokeAsync("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateBookOperationCompleted, userState);
        }
        
        private void OnValidateBookOperationCompleted(object arg) {
            if ((this.ValidateBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBookCompleted(this, new ValidateBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBookEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBookEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBookEntry(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBookEntry", new object[] {
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookEntryAsync(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookEntryAsync(bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookEntryAsync(string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookEntryOperationCompleted == null)) {
                this.AddBookEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookEntryOperationCompleted);
            }
            this.InvokeAsync("AddBookEntry", new object[] {
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookEntryOperationCompleted, userState);
        }
        
        private void OnAddBookEntryOperationCompleted(object arg) {
            if ((this.AddBookEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookEntryCompleted(this, new AddBookEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBook(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.EditBookAsync(accreditationNo, code, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.EditBookOperationCompleted == null)) {
                this.EditBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBookOperationCompleted);
            }
            this.InvokeAsync("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.EditBookOperationCompleted, userState);
        }
        
        private void OnEditBookOperationCompleted(object arg) {
            if ((this.EditBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBookCompleted(this, new EditBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBook(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteBookAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteBookOperationCompleted == null)) {
                this.DeleteBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBookOperationCompleted);
            }
            this.InvokeAsync("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteBookOperationCompleted, userState);
        }
        
        private void OnDeleteBookOperationCompleted(object arg) {
            if ((this.DeleteBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBookCompleted(this, new DeleteBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SaveDocumentsPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SaveDocumentsPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveDocumentsPayment(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password) {
            object[] results = this.Invoke("SaveDocumentsPayment", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentsPaymentAsync(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password) {
            this.SaveDocumentsPaymentAsync(accreditationNo, applicationLetter, paymentDocument, facilitiesdocument, equipmentdocument, coretextdocument, academcistaffdocument, universitypolicydocument, evidencedocument, userCode, password, null);
        }
        
        /// <remarks/>
        public void SaveDocumentsPaymentAsync(string accreditationNo, bool applicationLetter, bool paymentDocument, bool facilitiesdocument, bool equipmentdocument, bool coretextdocument, bool academcistaffdocument, bool universitypolicydocument, bool evidencedocument, string userCode, string password, object userState) {
            if ((this.SaveDocumentsPaymentOperationCompleted == null)) {
                this.SaveDocumentsPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentsPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentsPayment", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        userCode,
                        password}, this.SaveDocumentsPaymentOperationCompleted, userState);
        }
        
        private void OnSaveDocumentsPaymentOperationCompleted(object arg) {
            if ((this.SaveDocumentsPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentsPaymentCompleted(this, new SaveDocumentsPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPaymentsProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPaymentsProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsProgramme(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            object[] results = this.Invoke("ConfirmPaymentsProgramme", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsProgrammeAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password) {
            this.ConfirmPaymentsProgrammeAsync(accreditationNo, paymentDocument, paymentRef, userCode, password, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsProgrammeAsync(string accreditationNo, bool paymentDocument, string paymentRef, string userCode, string password, object userState) {
            if ((this.ConfirmPaymentsProgrammeOperationCompleted == null)) {
                this.ConfirmPaymentsProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsProgrammeOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsProgramme", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef,
                        userCode,
                        password}, this.ConfirmPaymentsProgrammeOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsProgrammeOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsProgrammeCompleted(this, new ConfirmPaymentsProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Fngeneratecodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Fngeneratecodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fngeneratecodes(string uninumber) {
            object[] results = this.Invoke("Fngeneratecodes", new object[] {
                        uninumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber) {
            this.FngeneratecodesAsync(uninumber, null);
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber, object userState) {
            if ((this.FngeneratecodesOperationCompleted == null)) {
                this.FngeneratecodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngeneratecodesOperationCompleted);
            }
            this.InvokeAsync("Fngeneratecodes", new object[] {
                        uninumber}, this.FngeneratecodesOperationCompleted, userState);
        }
        
        private void OnFngeneratecodesOperationCompleted(object arg) {
            if ((this.FngeneratecodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngeneratecodesCompleted(this, new FngeneratecodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddKnownStakeHolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddKnownStakeHolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddKnownStakeHolder(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            object[] results = this.Invoke("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            this.AddKnownStakeHolderAsync(qualityAuditNo, stakeHolderCode, isStakeHolder, isEngaged, isAnalyzed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password, object userState) {
            if ((this.AddKnownStakeHolderOperationCompleted == null)) {
                this.AddKnownStakeHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKnownStakeHolderOperationCompleted);
            }
            this.InvokeAsync("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password}, this.AddKnownStakeHolderOperationCompleted, userState);
        }
        
        private void OnAddKnownStakeHolderOperationCompleted(object arg) {
            if ((this.AddKnownStakeHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKnownStakeHolderCompleted(this, new AddKnownStakeHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNewStakeHolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNewStakeHolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNewStakeHolder(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            object[] results = this.Invoke("AddNewStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewStakeHolderAsync(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            this.AddNewStakeHolderAsync(qualityAuditNo, stakeHolder, isEngaged, isAnalyzed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNewStakeHolderAsync(string qualityAuditNo, string stakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password, object userState) {
            if ((this.AddNewStakeHolderOperationCompleted == null)) {
                this.AddNewStakeHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewStakeHolderOperationCompleted);
            }
            this.InvokeAsync("AddNewStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password}, this.AddNewStakeHolderOperationCompleted, userState);
        }
        
        private void OnAddNewStakeHolderOperationCompleted(object arg) {
            if ((this.AddNewStakeHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewStakeHolderCompleted(this, new AddNewStakeHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStrengthOrWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStrengthOrWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStrengthOrWeakness(string qualityAuditNo, int type, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password) {
            this.AddStrengthOrWeaknessAsync(qualityAuditNo, type, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password, object userState) {
            if ((this.AddStrengthOrWeaknessOperationCompleted == null)) {
                this.AddStrengthOrWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStrengthOrWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password}, this.AddStrengthOrWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStrengthOrWeaknessOperationCompleted(object arg) {
            if ((this.AddStrengthOrWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStrengthOrWeaknessCompleted(this, new AddStrengthOrWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSARCommitteesComposition1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSARCommitteesComposition1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition1(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            object[] results = this.Invoke("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            this.AddSARCommitteesComposition1Async(qualityAuditNo, type, description, category, userCode, password, name, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name, object userState) {
            if ((this.AddSARCommitteesComposition1OperationCompleted == null)) {
                this.AddSARCommitteesComposition1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesComposition1OperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name}, this.AddSARCommitteesComposition1OperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesComposition1OperationCompleted(object arg) {
            if ((this.AddSARCommitteesComposition1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesComposition1Completed(this, new AddSARCommitteesComposition1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSARCommitteesComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSARCommitteesComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            object[] results = this.Invoke("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            this.AddSARCommitteesCompositionAsync(qualityAuditNo, type, description, category, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, object userState) {
            if ((this.AddSARCommitteesCompositionOperationCompleted == null)) {
                this.AddSARCommitteesCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesCompositionOperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password}, this.AddSARCommitteesCompositionOperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesCompositionOperationCompleted(object arg) {
            if ((this.AddSARCommitteesCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesCompositionCompleted(this, new AddSARCommitteesCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddTrusteeSenateComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddTrusteeSenateComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrusteeSenateComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentDate, string nationality) {
            object[] results = this.Invoke("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality) {
            this.AddTrusteeSenateCompositionAsync(qualityAuditNo, type, description, category, userCode, password, highestAcademicQualification, appointmentDate, nationality, null);
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality, object userState) {
            if ((this.AddTrusteeSenateCompositionOperationCompleted == null)) {
                this.AddTrusteeSenateCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrusteeSenateCompositionOperationCompleted);
            }
            this.InvokeAsync("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality}, this.AddTrusteeSenateCompositionOperationCompleted, userState);
        }
        
        private void OnAddTrusteeSenateCompositionOperationCompleted(object arg) {
            if ((this.AddTrusteeSenateCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrusteeSenateCompositionCompleted(this, new AddTrusteeSenateCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHRSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHRSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHRSummary(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            object[] results = this.Invoke("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            this.AddHRSummaryAsync(qualityAuditNo, type, category, noFullEstablishment, male, female, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password, object userState) {
            if ((this.AddHRSummaryOperationCompleted == null)) {
                this.AddHRSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHRSummaryOperationCompleted);
            }
            this.InvokeAsync("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password}, this.AddHRSummaryOperationCompleted, userState);
        }
        
        private void OnAddHRSummaryOperationCompleted(object arg) {
            if ((this.AddHRSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHRSummaryCompleted(this, new AddHRSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDevelopmentTraining", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDevelopmentTraining_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDevelopmentTraining(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password) {
            object[] results = this.Invoke("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year,
                        male,
                        female,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password) {
            this.AddDevelopmentTrainingAsync(qualityAuditNo, category, year, male, female, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year, int male, int female, string userCode, string password, object userState) {
            if ((this.AddDevelopmentTrainingOperationCompleted == null)) {
                this.AddDevelopmentTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDevelopmentTrainingOperationCompleted);
            }
            this.InvokeAsync("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year,
                        male,
                        female,
                        userCode,
                        password}, this.AddDevelopmentTrainingOperationCompleted, userState);
        }
        
        private void OnAddDevelopmentTrainingOperationCompleted(object arg) {
            if ((this.AddDevelopmentTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDevelopmentTrainingCompleted(this, new AddDevelopmentTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSchool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSchool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSchool(string schoolName, string userCode, string password) {
            object[] results = this.Invoke("AddSchool", new object[] {
                        schoolName,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSchoolAsync(string schoolName, string userCode, string password) {
            this.AddSchoolAsync(schoolName, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSchoolAsync(string schoolName, string userCode, string password, object userState) {
            if ((this.AddSchoolOperationCompleted == null)) {
                this.AddSchoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSchoolOperationCompleted);
            }
            this.InvokeAsync("AddSchool", new object[] {
                        schoolName,
                        userCode,
                        password}, this.AddSchoolOperationCompleted, userState);
        }
        
        private void OnAddSchoolOperationCompleted(object arg) {
            if ((this.AddSchoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSchoolCompleted(this, new AddSchoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSchoolDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSchoolDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSchoolDepartment(string schoolCode, string departentName, string universityCode, string userCode, string password) {
            object[] results = this.Invoke("AddSchoolDepartment", new object[] {
                        schoolCode,
                        departentName,
                        universityCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSchoolDepartmentAsync(string schoolCode, string departentName, string universityCode, string userCode, string password) {
            this.AddSchoolDepartmentAsync(schoolCode, departentName, universityCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSchoolDepartmentAsync(string schoolCode, string departentName, string universityCode, string userCode, string password, object userState) {
            if ((this.AddSchoolDepartmentOperationCompleted == null)) {
                this.AddSchoolDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSchoolDepartmentOperationCompleted);
            }
            this.InvokeAsync("AddSchoolDepartment", new object[] {
                        schoolCode,
                        departentName,
                        universityCode,
                        userCode,
                        password}, this.AddSchoolDepartmentOperationCompleted, userState);
        }
        
        private void OnAddSchoolDepartmentOperationCompleted(object arg) {
            if ((this.AddSchoolDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSchoolDepartmentCompleted(this, new AddSchoolDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSourceOfIncome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSourceOfIncome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSourceOfIncome(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password) {
            object[] results = this.Invoke("AddSourceOfIncome", new object[] {
                        qaNo,
                        incomeCode,
                        year,
                        expected,
                        actual,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSourceOfIncomeAsync(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password) {
            this.AddSourceOfIncomeAsync(qaNo, incomeCode, year, expected, actual, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSourceOfIncomeAsync(string qaNo, int incomeCode, decimal year, decimal expected, decimal actual, string userCode, string password, object userState) {
            if ((this.AddSourceOfIncomeOperationCompleted == null)) {
                this.AddSourceOfIncomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSourceOfIncomeOperationCompleted);
            }
            this.InvokeAsync("AddSourceOfIncome", new object[] {
                        qaNo,
                        incomeCode,
                        year,
                        expected,
                        actual,
                        userCode,
                        password}, this.AddSourceOfIncomeOperationCompleted, userState);
        }
        
        private void OnAddSourceOfIncomeOperationCompleted(object arg) {
            if ((this.AddSourceOfIncomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSourceOfIncomeCompleted(this, new AddSourceOfIncomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCreditorsDebtors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCreditorsDebtors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCreditorsDebtors(string qaNo, int type, int creditordebitorCode, int year, decimal amount) {
            object[] results = this.Invoke("AddCreditorsDebtors", new object[] {
                        qaNo,
                        type,
                        creditordebitorCode,
                        year,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditorsDebtorsAsync(string qaNo, int type, int creditordebitorCode, int year, decimal amount) {
            this.AddCreditorsDebtorsAsync(qaNo, type, creditordebitorCode, year, amount, null);
        }
        
        /// <remarks/>
        public void AddCreditorsDebtorsAsync(string qaNo, int type, int creditordebitorCode, int year, decimal amount, object userState) {
            if ((this.AddCreditorsDebtorsOperationCompleted == null)) {
                this.AddCreditorsDebtorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditorsDebtorsOperationCompleted);
            }
            this.InvokeAsync("AddCreditorsDebtors", new object[] {
                        qaNo,
                        type,
                        creditordebitorCode,
                        year,
                        amount}, this.AddCreditorsDebtorsOperationCompleted, userState);
        }
        
        private void OnAddCreditorsDebtorsOperationCompleted(object arg) {
            if ((this.AddCreditorsDebtorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditorsDebtorsCompleted(this, new AddCreditorsDebtorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddActualBudget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddActualBudget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddActualBudget(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password) {
            object[] results = this.Invoke("AddActualBudget", new object[] {
                        qaNo,
                        type,
                        year,
                        budget,
                        actual,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddActualBudgetAsync(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password) {
            this.AddActualBudgetAsync(qaNo, type, year, budget, actual, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddActualBudgetAsync(string qaNo, int type, int year, decimal budget, decimal actual, string userCode, string password, object userState) {
            if ((this.AddActualBudgetOperationCompleted == null)) {
                this.AddActualBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActualBudgetOperationCompleted);
            }
            this.InvokeAsync("AddActualBudget", new object[] {
                        qaNo,
                        type,
                        year,
                        budget,
                        actual,
                        userCode,
                        password}, this.AddActualBudgetOperationCompleted, userState);
        }
        
        private void OnAddActualBudgetOperationCompleted(object arg) {
            if ((this.AddActualBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActualBudgetCompleted(this, new AddActualBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDebtEquityCurrentAssetsLiabi" +
            "lities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDebtEquityCurrentAssetsLiabilities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDebtEquityCurrentAssetsLiabilities(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password) {
            object[] results = this.Invoke("AddDebtEquityCurrentAssetsLiabilities", new object[] {
                        qaNo,
                        type,
                        year,
                        debt,
                        equity,
                        currentassets,
                        currentLiabilities,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDebtEquityCurrentAssetsLiabilitiesAsync(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password) {
            this.AddDebtEquityCurrentAssetsLiabilitiesAsync(qaNo, type, year, debt, equity, currentassets, currentLiabilities, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDebtEquityCurrentAssetsLiabilitiesAsync(string qaNo, int type, int year, decimal debt, decimal equity, decimal currentassets, decimal currentLiabilities, string userCode, string password, object userState) {
            if ((this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted == null)) {
                this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDebtEquityCurrentAssetsLiabilitiesOperationCompleted);
            }
            this.InvokeAsync("AddDebtEquityCurrentAssetsLiabilities", new object[] {
                        qaNo,
                        type,
                        year,
                        debt,
                        equity,
                        currentassets,
                        currentLiabilities,
                        userCode,
                        password}, this.AddDebtEquityCurrentAssetsLiabilitiesOperationCompleted, userState);
        }
        
        private void OnAddDebtEquityCurrentAssetsLiabilitiesOperationCompleted(object arg) {
            if ((this.AddDebtEquityCurrentAssetsLiabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDebtEquityCurrentAssetsLiabilitiesCompleted(this, new AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaAcademicProgramme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaAcademicProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaAcademicProgramme(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme) {
            object[] results = this.Invoke("AddQaAcademicProgramme", new object[] {
                        qaNo,
                        programmeName,
                        statusOfAccreditation,
                        highestAcademicQualification,
                        durationOfProgramme});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaAcademicProgrammeAsync(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme) {
            this.AddQaAcademicProgrammeAsync(qaNo, programmeName, statusOfAccreditation, highestAcademicQualification, durationOfProgramme, null);
        }
        
        /// <remarks/>
        public void AddQaAcademicProgrammeAsync(string qaNo, string programmeName, int statusOfAccreditation, int highestAcademicQualification, decimal durationOfProgramme, object userState) {
            if ((this.AddQaAcademicProgrammeOperationCompleted == null)) {
                this.AddQaAcademicProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaAcademicProgrammeOperationCompleted);
            }
            this.InvokeAsync("AddQaAcademicProgramme", new object[] {
                        qaNo,
                        programmeName,
                        statusOfAccreditation,
                        highestAcademicQualification,
                        durationOfProgramme}, this.AddQaAcademicProgrammeOperationCompleted, userState);
        }
        
        private void OnAddQaAcademicProgrammeOperationCompleted(object arg) {
            if ((this.AddQaAcademicProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaAcademicProgrammeCompleted(this, new AddQaAcademicProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaCollaboratingAcademicProgr" +
            "amme", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaCollaboratingAcademicProgramme_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaCollaboratingAcademicProgramme(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution) {
            object[] results = this.Invoke("AddQaCollaboratingAcademicProgramme", new object[] {
                        qaNo,
                        schoolCode,
                        programmeName,
                        collaboratingInstitution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaCollaboratingAcademicProgrammeAsync(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution) {
            this.AddQaCollaboratingAcademicProgrammeAsync(qaNo, schoolCode, programmeName, collaboratingInstitution, null);
        }
        
        /// <remarks/>
        public void AddQaCollaboratingAcademicProgrammeAsync(string qaNo, int schoolCode, string programmeName, string collaboratingInstitution, object userState) {
            if ((this.AddQaCollaboratingAcademicProgrammeOperationCompleted == null)) {
                this.AddQaCollaboratingAcademicProgrammeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaCollaboratingAcademicProgrammeOperationCompleted);
            }
            this.InvokeAsync("AddQaCollaboratingAcademicProgramme", new object[] {
                        qaNo,
                        schoolCode,
                        programmeName,
                        collaboratingInstitution}, this.AddQaCollaboratingAcademicProgrammeOperationCompleted, userState);
        }
        
        private void OnAddQaCollaboratingAcademicProgrammeOperationCompleted(object arg) {
            if ((this.AddQaCollaboratingAcademicProgrammeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaCollaboratingAcademicProgrammeCompleted(this, new AddQaCollaboratingAcademicProgrammeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddQaProgrammeSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddQaProgrammeSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQaProgrammeSummary(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate) {
            object[] results = this.Invoke("AddQaProgrammeSummary", new object[] {
                        qaNo,
                        schoolCode,
                        phd,
                        masters,
                        pgd,
                        bachelors,
                        diploma,
                        certificate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQaProgrammeSummaryAsync(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate) {
            this.AddQaProgrammeSummaryAsync(qaNo, schoolCode, phd, masters, pgd, bachelors, diploma, certificate, null);
        }
        
        /// <remarks/>
        public void AddQaProgrammeSummaryAsync(string qaNo, int schoolCode, int phd, int masters, int pgd, int bachelors, int diploma, int certificate, object userState) {
            if ((this.AddQaProgrammeSummaryOperationCompleted == null)) {
                this.AddQaProgrammeSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQaProgrammeSummaryOperationCompleted);
            }
            this.InvokeAsync("AddQaProgrammeSummary", new object[] {
                        qaNo,
                        schoolCode,
                        phd,
                        masters,
                        pgd,
                        bachelors,
                        diploma,
                        certificate}, this.AddQaProgrammeSummaryOperationCompleted, userState);
        }
        
        private void OnAddQaProgrammeSummaryOperationCompleted(object arg) {
            if ((this.AddQaProgrammeSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQaProgrammeSummaryCompleted(this, new AddQaProgrammeSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddKenyanInternationalStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddKenyanInternationalStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddKenyanInternationalStudents(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents) {
            object[] results = this.Invoke("AddKenyanInternationalStudents", new object[] {
                        qaNo,
                        academicLevel,
                        kenyanStudents,
                        internationalStudents});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddKenyanInternationalStudentsAsync(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents) {
            this.AddKenyanInternationalStudentsAsync(qaNo, academicLevel, kenyanStudents, internationalStudents, null);
        }
        
        /// <remarks/>
        public void AddKenyanInternationalStudentsAsync(string qaNo, string academicLevel, int kenyanStudents, int internationalStudents, object userState) {
            if ((this.AddKenyanInternationalStudentsOperationCompleted == null)) {
                this.AddKenyanInternationalStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKenyanInternationalStudentsOperationCompleted);
            }
            this.InvokeAsync("AddKenyanInternationalStudents", new object[] {
                        qaNo,
                        academicLevel,
                        kenyanStudents,
                        internationalStudents}, this.AddKenyanInternationalStudentsOperationCompleted, userState);
        }
        
        private void OnAddKenyanInternationalStudentsOperationCompleted(object arg) {
            if ((this.AddKenyanInternationalStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKenyanInternationalStudentsCompleted(this, new AddKenyanInternationalStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicStaffQuality", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicStaffQuality_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaffQuality(string qaNo, int category, int ageBracket, int noOfStaff) {
            object[] results = this.Invoke("AddAcademicStaffQuality", new object[] {
                        qaNo,
                        category,
                        ageBracket,
                        noOfStaff});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffQualityAsync(string qaNo, int category, int ageBracket, int noOfStaff) {
            this.AddAcademicStaffQualityAsync(qaNo, category, ageBracket, noOfStaff, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffQualityAsync(string qaNo, int category, int ageBracket, int noOfStaff, object userState) {
            if ((this.AddAcademicStaffQualityOperationCompleted == null)) {
                this.AddAcademicStaffQualityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffQualityOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaffQuality", new object[] {
                        qaNo,
                        category,
                        ageBracket,
                        noOfStaff}, this.AddAcademicStaffQualityOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffQualityOperationCompleted(object arg) {
            if ((this.AddAcademicStaffQualityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffQualityCompleted(this, new AddAcademicStaffQualityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AcceptRejectPeerReviewerJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AcceptRejectPeerReviewerJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptRejectPeerReviewerJob(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptRejectPeerReviewerJob", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptRejectPeerReviewerJobAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptRejectPeerReviewerJobAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptRejectPeerReviewerJobAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptRejectPeerReviewerJobOperationCompleted == null)) {
                this.AcceptRejectPeerReviewerJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptRejectPeerReviewerJobOperationCompleted);
            }
            this.InvokeAsync("AcceptRejectPeerReviewerJob", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptRejectPeerReviewerJobOperationCompleted, userState);
        }
        
        private void OnAcceptRejectPeerReviewerJobOperationCompleted(object arg) {
            if ((this.AcceptRejectPeerReviewerJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptRejectPeerReviewerJobCompleted(this, new AcceptRejectPeerReviewerJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerReviewersEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerReviewersEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerReviewersEvaluation(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo) {
            object[] results = this.Invoke("AddPeerReviewersEvaluation", new object[] {
                        jobCode,
                        peerCode,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluationAsync(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo) {
            this.AddPeerReviewersEvaluationAsync(jobCode, peerCode, component, subComponent, strength, weakness, recommendation, score, applicationNo, null);
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluationAsync(int jobCode, string peerCode, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, string applicationNo, object userState) {
            if ((this.AddPeerReviewersEvaluationOperationCompleted == null)) {
                this.AddPeerReviewersEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerReviewersEvaluationOperationCompleted);
            }
            this.InvokeAsync("AddPeerReviewersEvaluation", new object[] {
                        jobCode,
                        peerCode,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        applicationNo}, this.AddPeerReviewersEvaluationOperationCompleted, userState);
        }
        
        private void OnAddPeerReviewersEvaluationOperationCompleted(object arg) {
            if ((this.AddPeerReviewersEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerReviewersEvaluationCompleted(this, new AddPeerReviewersEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnEditPeerReviewersEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnEditPeerReviewersEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPeerReviewersEvaluation(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            object[] results = this.Invoke("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            this.FnEditPeerReviewersEvaluationAsync(entryCode, strength, weakness, recommendation, score, null);
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score, object userState) {
            if ((this.FnEditPeerReviewersEvaluationOperationCompleted == null)) {
                this.FnEditPeerReviewersEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPeerReviewersEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score}, this.FnEditPeerReviewersEvaluationOperationCompleted, userState);
        }
        
        private void OnFnEditPeerReviewersEvaluationOperationCompleted(object arg) {
            if ((this.FnEditPeerReviewersEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPeerReviewersEvaluationCompleted(this, new FnEditPeerReviewersEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnSendPeerApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnSendPeerApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password) {
            this.FnSendPeerApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.FnSendPeerApprovalRequestOperationCompleted == null)) {
                this.FnSendPeerApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password}, this.FnSendPeerApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnSendPeerApprovalRequestOperationCompleted(object arg) {
            if ((this.FnSendPeerApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerApprovalRequestCompleted(this, new FnSendPeerApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnRegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnRegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterPeerReviewer(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.FnRegisterPeerReviewerAsync(name, idNumber, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.FnRegisterPeerReviewerOperationCompleted == null)) {
                this.FnRegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.FnRegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnFnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.FnRegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterPeerReviewerCompleted(this, new FnRegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGetVendornNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGetVendornNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetVendornNumber(string usercode) {
            object[] results = this.Invoke("FnGetVendornNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode) {
            this.FnGetVendornNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode, object userState) {
            if ((this.FnGetVendornNumberOperationCompleted == null)) {
                this.FnGetVendornNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetVendornNumberOperationCompleted);
            }
            this.InvokeAsync("FnGetVendornNumber", new object[] {
                        usercode}, this.FnGetVendornNumberOperationCompleted, userState);
        }
        
        private void OnFnGetVendornNumberOperationCompleted(object arg) {
            if ((this.FnGetVendornNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetVendornNumberCompleted(this, new FnGetVendornNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetApplicationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode) {
            this.GetApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetApplicationNumberOperationCompleted == null)) {
                this.GetApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetApplicationNumber", new object[] {
                        usercode}, this.GetApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetApplicationNumberOperationCompleted(object arg) {
            if ((this.GetApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationNumberCompleted(this, new GetApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ProgramAccreditationAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ProgramAccreditationAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProgramAccreditationAlert(int user, string universityCode, string accreditno) {
            object[] results = this.Invoke("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno) {
            this.ProgramAccreditationAlertAsync(user, universityCode, accreditno, null);
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno, object userState) {
            if ((this.ProgramAccreditationAlertOperationCompleted == null)) {
                this.ProgramAccreditationAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramAccreditationAlertOperationCompleted);
            }
            this.InvokeAsync("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno}, this.ProgramAccreditationAlertOperationCompleted, userState);
        }
        
        private void OnProgramAccreditationAlertOperationCompleted(object arg) {
            if ((this.ProgramAccreditationAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramAccreditationAlertCompleted(this, new ProgramAccreditationAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetProgramApplicationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetProgramApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProgramApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetProgramApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode) {
            this.GetProgramApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetProgramApplicationNumberOperationCompleted == null)) {
                this.GetProgramApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetProgramApplicationNumber", new object[] {
                        usercode}, this.GetProgramApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetProgramApplicationNumberOperationCompleted(object arg) {
            if ((this.GetProgramApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramApplicationNumberCompleted(this, new GetProgramApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionCreateinvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionCreateinvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionCreateinvoice(string universityCode, int usercode) {
            object[] results = this.Invoke("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode) {
            this.InstitutionCreateinvoiceAsync(universityCode, usercode, null);
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode, object userState) {
            if ((this.InstitutionCreateinvoiceOperationCompleted == null)) {
                this.InstitutionCreateinvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionCreateinvoiceOperationCompleted);
            }
            this.InvokeAsync("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode}, this.InstitutionCreateinvoiceOperationCompleted, userState);
        }
        
        private void OnInstitutionCreateinvoiceOperationCompleted(object arg) {
            if ((this.InstitutionCreateinvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionCreateinvoiceCompleted(this, new InstitutionCreateinvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddComments(string usercode, string universitycode, string commentdescription) {
            object[] results = this.Invoke("AddComments", new object[] {
                        usercode,
                        universitycode,
                        commentdescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCommentsAsync(string usercode, string universitycode, string commentdescription) {
            this.AddCommentsAsync(usercode, universitycode, commentdescription, null);
        }
        
        /// <remarks/>
        public void AddCommentsAsync(string usercode, string universitycode, string commentdescription, object userState) {
            if ((this.AddCommentsOperationCompleted == null)) {
                this.AddCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentsOperationCompleted);
            }
            this.InvokeAsync("AddComments", new object[] {
                        usercode,
                        universitycode,
                        commentdescription}, this.AddCommentsOperationCompleted, userState);
        }
        
        private void OnAddCommentsOperationCompleted(object arg) {
            if ((this.AddCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentsCompleted(this, new AddCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmPayment(string universityCode) {
            this.Invoke("ConfirmPayment", new object[] {
                        universityCode});
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode) {
            this.ConfirmPaymentAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode, object userState) {
            if ((this.ConfirmPaymentOperationCompleted == null)) {
                this.ConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ConfirmPayment", new object[] {
                        universityCode}, this.ConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentOperationCompleted(object arg) {
            if ((this.ConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ProgramConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ProgramConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProgramConfirmPayment(decimal amount) {
            this.Invoke("ProgramConfirmPayment", new object[] {
                        amount});
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount) {
            this.ProgramConfirmPaymentAsync(amount, null);
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount, object userState) {
            if ((this.ProgramConfirmPaymentOperationCompleted == null)) {
                this.ProgramConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ProgramConfirmPayment", new object[] {
                        amount}, this.ProgramConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnProgramConfirmPaymentOperationCompleted(object arg) {
            if ((this.ProgramConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentDraft", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentDraft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentDraft(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword) {
            object[] results = this.Invoke("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword) {
            this.AddStudentDraftAsync(idPassport, admissionNo, surname, middleName, firstName, gender, dob, homeCounty, ethnicBckground, nationality, sponsorship, yearOfStudy, disabilityDescription, disabilityCode, myProgram, dateOfAdmission, campusCode, residentstatus, studentstatus, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    int residentstatus, 
                    int studentstatus, 
                    string userCode, 
                    string userPassword, 
                    object userState) {
            if ((this.AddStudentDraftOperationCompleted == null)) {
                this.AddStudentDraftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentDraftOperationCompleted);
            }
            this.InvokeAsync("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        residentstatus,
                        studentstatus,
                        userCode,
                        userPassword}, this.AddStudentDraftOperationCompleted, userState);
        }
        
        private void OnAddStudentDraftOperationCompleted(object arg) {
            if ((this.AddStudentDraftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentDraftCompleted(this, new AddStudentDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Approve", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Approve_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approve(string category, string userId, string password, bool action) {
            object[] results = this.Invoke("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action) {
            this.ApproveAsync(category, userId, password, action, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteStudent(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password) {
            this.DeleteStudentAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteStudentOperationCompleted == null)) {
                this.DeleteStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentOperationCompleted);
            }
            this.InvokeAsync("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteStudentOperationCompleted, userState);
        }
        
        private void OnDeleteStudentOperationCompleted(object arg) {
            if ((this.DeleteStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentCompleted(this, new DeleteStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSanitations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSanitations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSanitations(string campus, string type, string number, string location, string userCode, string password) {
            object[] results = this.Invoke("EditSanitations", new object[] {
                        campus,
                        type,
                        number,
                        location,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSanitationsAsync(string campus, string type, string number, string location, string userCode, string password) {
            this.EditSanitationsAsync(campus, type, number, location, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditSanitationsAsync(string campus, string type, string number, string location, string userCode, string password, object userState) {
            if ((this.EditSanitationsOperationCompleted == null)) {
                this.EditSanitationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSanitationsOperationCompleted);
            }
            this.InvokeAsync("EditSanitations", new object[] {
                        campus,
                        type,
                        number,
                        location,
                        userCode,
                        password}, this.EditSanitationsOperationCompleted, userState);
        }
        
        private void OnEditSanitationsOperationCompleted(object arg) {
            if ((this.EditSanitationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSanitationsCompleted(this, new EditSanitationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditUtility", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditUtility_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditUtility(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password) {
            object[] results = this.Invoke("EditUtility", new object[] {
                        universitycode,
                        campus,
                        category,
                        name,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUtilityAsync(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password) {
            this.EditUtilityAsync(universitycode, campus, category, name, utilitystatus, capacity, serviceprovider, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditUtilityAsync(string universitycode, string campus, string category, string name, string utilitystatus, string capacity, string serviceprovider, string userCode, string password, object userState) {
            if ((this.EditUtilityOperationCompleted == null)) {
                this.EditUtilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUtilityOperationCompleted);
            }
            this.InvokeAsync("EditUtility", new object[] {
                        universitycode,
                        campus,
                        category,
                        name,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        password}, this.EditUtilityOperationCompleted, userState);
        }
        
        private void OnEditUtilityOperationCompleted(object arg) {
            if ((this.EditUtilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUtilityCompleted(this, new EditUtilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBuilding(int buildingCode, string campus, int category, string description, int capacity, string location, decimal size, string userCode, string userPassword) {
            object[] results = this.Invoke("EditBuilding", new object[] {
                        buildingCode,
                        campus,
                        category,
                        description,
                        capacity,
                        location,
                        size,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBuildingAsync(int buildingCode, string campus, int category, string description, int capacity, string location, decimal size, string userCode, string userPassword) {
            this.EditBuildingAsync(buildingCode, campus, category, description, capacity, location, size, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditBuildingAsync(int buildingCode, string campus, int category, string description, int capacity, string location, decimal size, string userCode, string userPassword, object userState) {
            if ((this.EditBuildingOperationCompleted == null)) {
                this.EditBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBuildingOperationCompleted);
            }
            this.InvokeAsync("EditBuilding", new object[] {
                        buildingCode,
                        campus,
                        category,
                        description,
                        capacity,
                        location,
                        size,
                        userCode,
                        userPassword}, this.EditBuildingOperationCompleted, userState);
        }
        
        private void OnEditBuildingOperationCompleted(object arg) {
            if ((this.EditBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBuildingCompleted(this, new EditBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFire(string universitycode, string campus, string @class, string location, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofinspection, int noofdevices, string userCode, string password) {
            object[] results = this.Invoke("EditFire", new object[] {
                        universitycode,
                        campus,
                        @class,
                        location,
                        dateofinspection,
                        noofdevices,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFireAsync(string universitycode, string campus, string @class, string location, System.DateTime dateofinspection, int noofdevices, string userCode, string password) {
            this.EditFireAsync(universitycode, campus, @class, location, dateofinspection, noofdevices, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditFireAsync(string universitycode, string campus, string @class, string location, System.DateTime dateofinspection, int noofdevices, string userCode, string password, object userState) {
            if ((this.EditFireOperationCompleted == null)) {
                this.EditFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFireOperationCompleted);
            }
            this.InvokeAsync("EditFire", new object[] {
                        universitycode,
                        campus,
                        @class,
                        location,
                        dateofinspection,
                        noofdevices,
                        userCode,
                        password}, this.EditFireOperationCompleted, userState);
        }
        
        private void OnEditFireOperationCompleted(object arg) {
            if ((this.EditFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFireCompleted(this, new EditFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditRoadAccess", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditRoadAccess_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditRoadAccess(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password) {
            object[] results = this.Invoke("EditRoadAccess", new object[] {
                        universitycode,
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditRoadAccessAsync(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password) {
            this.EditRoadAccessAsync(universitycode, campus, roadstatus, description, distance, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditRoadAccessAsync(string universitycode, string campus, string roadstatus, string description, string distance, string userCode, string password, object userState) {
            if ((this.EditRoadAccessOperationCompleted == null)) {
                this.EditRoadAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditRoadAccessOperationCompleted);
            }
            this.InvokeAsync("EditRoadAccess", new object[] {
                        universitycode,
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        password}, this.EditRoadAccessOperationCompleted, userState);
        }
        
        private void OnEditRoadAccessOperationCompleted(object arg) {
            if ((this.EditRoadAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditRoadAccessCompleted(this, new EditRoadAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditRecreatonal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditRecreatonal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditRecreatonal(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password) {
            object[] results = this.Invoke("EditRecreatonal", new object[] {
                        universitycode,
                        campus,
                        type,
                        location,
                        quantity,
                        ownership,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditRecreatonalAsync(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password) {
            this.EditRecreatonalAsync(universitycode, campus, type, location, quantity, ownership, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditRecreatonalAsync(string universitycode, string campus, string type, string location, int quantity, string ownership, string userCode, string password, object userState) {
            if ((this.EditRecreatonalOperationCompleted == null)) {
                this.EditRecreatonalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditRecreatonalOperationCompleted);
            }
            this.InvokeAsync("EditRecreatonal", new object[] {
                        universitycode,
                        campus,
                        type,
                        location,
                        quantity,
                        ownership,
                        userCode,
                        password}, this.EditRecreatonalOperationCompleted, userState);
        }
        
        private void OnEditRecreatonalOperationCompleted(object arg) {
            if ((this.EditRecreatonalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditRecreatonalCompleted(this, new EditRecreatonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditPlantsEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditPlantsEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPlantsEquipments(string universitycode, string campus, string type, int quantity, string location, string userCode, string password) {
            object[] results = this.Invoke("EditPlantsEquipments", new object[] {
                        universitycode,
                        campus,
                        type,
                        quantity,
                        location,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPlantsEquipmentsAsync(string universitycode, string campus, string type, int quantity, string location, string userCode, string password) {
            this.EditPlantsEquipmentsAsync(universitycode, campus, type, quantity, location, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditPlantsEquipmentsAsync(string universitycode, string campus, string type, int quantity, string location, string userCode, string password, object userState) {
            if ((this.EditPlantsEquipmentsOperationCompleted == null)) {
                this.EditPlantsEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPlantsEquipmentsOperationCompleted);
            }
            this.InvokeAsync("EditPlantsEquipments", new object[] {
                        universitycode,
                        campus,
                        type,
                        quantity,
                        location,
                        userCode,
                        password}, this.EditPlantsEquipmentsOperationCompleted, userState);
        }
        
        private void OnEditPlantsEquipmentsOperationCompleted(object arg) {
            if ((this.EditPlantsEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPlantsEquipmentsCompleted(this, new EditPlantsEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditWasteManagement(string universitycode, string campus, string category, string description, string others, string userCode, string password) {
            object[] results = this.Invoke("EditWasteManagement", new object[] {
                        universitycode,
                        campus,
                        category,
                        description,
                        others,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditWasteManagementAsync(string universitycode, string campus, string category, string description, string others, string userCode, string password) {
            this.EditWasteManagementAsync(universitycode, campus, category, description, others, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditWasteManagementAsync(string universitycode, string campus, string category, string description, string others, string userCode, string password, object userState) {
            if ((this.EditWasteManagementOperationCompleted == null)) {
                this.EditWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditWasteManagementOperationCompleted);
            }
            this.InvokeAsync("EditWasteManagement", new object[] {
                        universitycode,
                        campus,
                        category,
                        description,
                        others,
                        userCode,
                        password}, this.EditWasteManagementOperationCompleted, userState);
        }
        
        private void OnEditWasteManagementOperationCompleted(object arg) {
            if ((this.EditWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditWasteManagementCompleted(this, new EditWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLibrary(string universitycode, string campus, string description, string sitting, string functional, int volume, int title, string service, string bandwith, int staff, string qualifications, int computers, string accesspoints, string userCode, string password) {
            object[] results = this.Invoke("EditLibrary", new object[] {
                        universitycode,
                        campus,
                        description,
                        sitting,
                        functional,
                        volume,
                        title,
                        service,
                        bandwith,
                        staff,
                        qualifications,
                        computers,
                        accesspoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLibraryAsync(string universitycode, string campus, string description, string sitting, string functional, int volume, int title, string service, string bandwith, int staff, string qualifications, int computers, string accesspoints, string userCode, string password) {
            this.EditLibraryAsync(universitycode, campus, description, sitting, functional, volume, title, service, bandwith, staff, qualifications, computers, accesspoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLibraryAsync(
                    string universitycode, 
                    string campus, 
                    string description, 
                    string sitting, 
                    string functional, 
                    int volume, 
                    int title, 
                    string service, 
                    string bandwith, 
                    int staff, 
                    string qualifications, 
                    int computers, 
                    string accesspoints, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.EditLibraryOperationCompleted == null)) {
                this.EditLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLibraryOperationCompleted);
            }
            this.InvokeAsync("EditLibrary", new object[] {
                        universitycode,
                        campus,
                        description,
                        sitting,
                        functional,
                        volume,
                        title,
                        service,
                        bandwith,
                        staff,
                        qualifications,
                        computers,
                        accesspoints,
                        userCode,
                        password}, this.EditLibraryOperationCompleted, userState);
        }
        
        private void OnEditLibraryOperationCompleted(object arg) {
            if ((this.EditLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLibraryCompleted(this, new EditLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAdminSpace", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAdminSpace_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddAdminSpace(string category, decimal space, string campus) {
            object[] results = this.Invoke("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus) {
            this.AddAdminSpaceAsync(category, space, campus, null);
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus, object userState) {
            if ((this.AddAdminSpaceOperationCompleted == null)) {
                this.AddAdminSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdminSpaceOperationCompleted);
            }
            this.InvokeAsync("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus}, this.AddAdminSpaceOperationCompleted, userState);
        }
        
        private void OnAddAdminSpaceOperationCompleted(object arg) {
            if ((this.AddAdminSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdminSpaceCompleted(this, new AddAdminSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionSignup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionSignup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionSignup(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            object[] results = this.Invoke("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            this.InstitutionSignupAsync(proposedName, kraPin, proposedLocation, sponsor, county, constituency, postAddress, postCode, institutionWebsite, phoneNumber, emailAddress, password, confirmPassword, null);
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword, object userState) {
            if ((this.InstitutionSignupOperationCompleted == null)) {
                this.InstitutionSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionSignupOperationCompleted);
            }
            this.InvokeAsync("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword}, this.InstitutionSignupOperationCompleted, userState);
        }
        
        private void OnInstitutionSignupOperationCompleted(object arg) {
            if ((this.InstitutionSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionSignupCompleted(this, new InstitutionSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForAccreditation(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string userCode, string userPassword) {
            object[] results = this.Invoke("ApplyForAccreditation", new object[] {
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string userCode, string userPassword) {
            this.ApplyForAccreditationAsync(proposedName, proposedLocation, postaddress, postcode, email, accreditationType, institutionwebsite, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string userCode, string userPassword, object userState) {
            if ((this.ApplyForAccreditationOperationCompleted == null)) {
                this.ApplyForAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForAccreditation", new object[] {
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        userCode,
                        userPassword}, this.ApplyForAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForAccreditationCompleted(this, new ApplyForAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForProgramAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForProgramAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForProgramAccreditation(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            object[] results = this.Invoke("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            this.ApplyForProgramAccreditationAsync(userCode, campus, programName, programDomain, programLevel, paymentReference, null);
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference, object userState) {
            if ((this.ApplyForProgramAccreditationOperationCompleted == null)) {
                this.ApplyForProgramAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForProgramAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference}, this.ApplyForProgramAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForProgramAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForProgramAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForProgramAccreditationCompleted(this, new ApplyForProgramAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaff(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofCurrentAppointment, 
                    string userName, 
                    string password) {
            object[] results = this.Invoke("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    string userName, 
                    string password) {
            this.AddAcademicStaffAsync(idNumber, payrollNo, firstName, middleName, lastName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistrationCode, programDomain, rankCode, dateOfFirstAppointment, termsOfService, highestAcademicQualification, campus, dateofCurrentAppointment, userName, password, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddAcademicStaffOperationCompleted == null)) {
                this.AddAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        userName,
                        password}, this.AddAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffOperationCompleted(object arg) {
            if ((this.AddAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffCompleted(this, new AddAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAcademicStaff(string idNo, string payrollNo, string user, string password) {
            object[] results = this.Invoke("DeleteAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(string idNo, string payrollNo, string user, string password) {
            this.DeleteAcademicStaffAsync(idNo, payrollNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(string idNo, string payrollNo, string user, string password, object userState) {
            if ((this.DeleteAcademicStaffOperationCompleted == null)) {
                this.DeleteAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        user,
                        password}, this.DeleteAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicStaffCompleted(this, new DeleteAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonAcademicStaff(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    string userCode, 
                    string password) {
            this.AddNonAcademicStaffAsync(idNo, payrollNo, surname, middleName, firstName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistration, campus, highestAcademciQualification, staffRank, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddNonAcademicStaffOperationCompleted == null)) {
                this.AddNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        userCode,
                        password}, this.AddNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddNonAcademicStaffOperationCompleted(object arg) {
            if ((this.AddNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonAcademicStaffCompleted(this, new AddNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPartTimeAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPartTimeAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPartTimeAcademicStaff(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddPartTimeAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        category,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPartTimeAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    string userCode, 
                    string password) {
            this.AddPartTimeAcademicStaffAsync(idNo, payrollNo, surname, middleName, firstName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistration, campus, highestAcademciQualification, staffRank, category, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddPartTimeAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    int highestAcademciQualification, 
                    string staffRank, 
                    int category, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddPartTimeAcademicStaffOperationCompleted == null)) {
                this.AddPartTimeAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPartTimeAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddPartTimeAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        highestAcademciQualification,
                        staffRank,
                        category,
                        userCode,
                        password}, this.AddPartTimeAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddPartTimeAcademicStaffOperationCompleted(object arg) {
            if ((this.AddPartTimeAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPartTimeAcademicStaffCompleted(this, new AddPartTimeAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteNonAcademicStaff(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password) {
            this.DeleteNonAcademicStaffAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteNonAcademicStaffOperationCompleted == null)) {
                this.DeleteNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteNonAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNonAcademicStaffCompleted(this, new DeleteNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePartTimeAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePartTimeAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeletePartTimeAcademicStaff(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeletePartTimeAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePartTimeAcademicStaffAsync(int entryNo, string user, string password) {
            this.DeletePartTimeAcademicStaffAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeletePartTimeAcademicStaffAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeletePartTimeAcademicStaffOperationCompleted == null)) {
                this.DeletePartTimeAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePartTimeAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeletePartTimeAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password}, this.DeletePartTimeAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeletePartTimeAcademicStaffOperationCompleted(object arg) {
            if ((this.DeletePartTimeAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePartTimeAcademicStaffCompleted(this, new DeletePartTimeAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteResearch(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteResearch", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResearchAsync(int entryNo, string user, string password) {
            this.DeleteResearchAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteResearchAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteResearchOperationCompleted == null)) {
                this.DeleteResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteResearch", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteResearchOperationCompleted, userState);
        }
        
        private void OnDeleteResearchOperationCompleted(object arg) {
            if ((this.DeleteResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResearchCompleted(this, new DeleteResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudentsResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudentsResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteStudentsResearch(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteStudentsResearch", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentsResearchAsync(int entryNo, string user, string password) {
            this.DeleteStudentsResearchAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentsResearchAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteStudentsResearchOperationCompleted == null)) {
                this.DeleteStudentsResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentsResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteStudentsResearch", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteStudentsResearchOperationCompleted, userState);
        }
        
        private void OnDeleteStudentsResearchOperationCompleted(object arg) {
            if ((this.DeleteStudentsResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentsResearchCompleted(this, new DeleteStudentsResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInitialPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInitialPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInitialPrograms(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password) {
            object[] results = this.Invoke("AddInitialPrograms", new object[] {
                        courseid,
                        coursetitle,
                        credithours,
                        courseyear,
                        coursecategory,
                        coursecomments,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInitialProgramsAsync(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password) {
            this.AddInitialProgramsAsync(courseid, coursetitle, credithours, courseyear, coursecategory, coursecomments, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInitialProgramsAsync(string courseid, string coursetitle, decimal credithours, string courseyear, string coursecategory, string coursecomments, string userCode, string password, object userState) {
            if ((this.AddInitialProgramsOperationCompleted == null)) {
                this.AddInitialProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInitialProgramsOperationCompleted);
            }
            this.InvokeAsync("AddInitialPrograms", new object[] {
                        courseid,
                        coursetitle,
                        credithours,
                        courseyear,
                        coursecategory,
                        coursecomments,
                        userCode,
                        password}, this.AddInitialProgramsOperationCompleted, userState);
        }
        
        private void OnAddInitialProgramsOperationCompleted(object arg) {
            if ((this.AddInitialProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInitialProgramsCompleted(this, new AddInitialProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddReferenceMaterial", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddReferenceMaterial_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddReferenceMaterial(string applicationNo, string coursecode, string referencematerial, string userCode, string password) {
            object[] results = this.Invoke("AddReferenceMaterial", new object[] {
                        applicationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReferenceMaterialAsync(string applicationNo, string coursecode, string referencematerial, string userCode, string password) {
            this.AddReferenceMaterialAsync(applicationNo, coursecode, referencematerial, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddReferenceMaterialAsync(string applicationNo, string coursecode, string referencematerial, string userCode, string password, object userState) {
            if ((this.AddReferenceMaterialOperationCompleted == null)) {
                this.AddReferenceMaterialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReferenceMaterialOperationCompleted);
            }
            this.InvokeAsync("AddReferenceMaterial", new object[] {
                        applicationNo,
                        coursecode,
                        referencematerial,
                        userCode,
                        password}, this.AddReferenceMaterialOperationCompleted, userState);
        }
        
        private void OnAddReferenceMaterialOperationCompleted(object arg) {
            if ((this.AddReferenceMaterialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReferenceMaterialCompleted(this, new AddReferenceMaterialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDisciplineCase(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, string verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password) {
            this.AddDisciplineCaseAsync(studentId, admissionNo, firstName, middleName, lastName, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.AddDisciplineCaseOperationCompleted == null)) {
                this.AddDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.AddDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnAddDisciplineCaseOperationCompleted(object arg) {
            if ((this.AddDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDisciplineCaseCompleted(this, new AddDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSuccessfulAppeals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSuccessfulAppeals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSuccessfulAppeals(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, string verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("AddSuccessfulAppeals", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSuccessfulAppealsAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password) {
            this.AddSuccessfulAppealsAsync(studentId, admissionNo, firstName, middleName, lastName, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSuccessfulAppealsAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.AddSuccessfulAppealsOperationCompleted == null)) {
                this.AddSuccessfulAppealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSuccessfulAppealsOperationCompleted);
            }
            this.InvokeAsync("AddSuccessfulAppeals", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.AddSuccessfulAppealsOperationCompleted, userState);
        }
        
        private void OnAddSuccessfulAppealsOperationCompleted(object arg) {
            if ((this.AddSuccessfulAppealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSuccessfulAppealsCompleted(this, new AddSuccessfulAppealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EditDisciplineCase(int caseId, string studentId, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, string verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password) {
            this.EditDisciplineCaseAsync(caseId, studentId, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.EditDisciplineCaseOperationCompleted == null)) {
                this.EditDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.EditDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnEditDisciplineCaseOperationCompleted(object arg) {
            if ((this.EditDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDisciplineCaseCompleted(this, new EditDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddExpectedActualAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddExpectedActualAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddExpectedActualAmounts(string universityCode, int type, int year, decimal expected, decimal actual, string userCode, string password) {
            object[] results = this.Invoke("AddExpectedActualAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        expected,
                        actual,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExpectedActualAmountsAsync(string universityCode, int type, int year, decimal expected, decimal actual, string userCode, string password) {
            this.AddExpectedActualAmountsAsync(universityCode, type, year, expected, actual, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddExpectedActualAmountsAsync(string universityCode, int type, int year, decimal expected, decimal actual, string userCode, string password, object userState) {
            if ((this.AddExpectedActualAmountsOperationCompleted == null)) {
                this.AddExpectedActualAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExpectedActualAmountsOperationCompleted);
            }
            this.InvokeAsync("AddExpectedActualAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        expected,
                        actual,
                        userCode,
                        password}, this.AddExpectedActualAmountsOperationCompleted, userState);
        }
        
        private void OnAddExpectedActualAmountsOperationCompleted(object arg) {
            if ((this.AddExpectedActualAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExpectedActualAmountsCompleted(this, new AddExpectedActualAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCreditorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCreditorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCreditorsAmounts(string universityCode, int type, int year, decimal amounts, string userCode, string password) {
            object[] results = this.Invoke("AddCreditorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditorsAmountsAsync(string universityCode, int type, int year, decimal amounts, string userCode, string password) {
            this.AddCreditorsAmountsAsync(universityCode, type, year, amounts, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCreditorsAmountsAsync(string universityCode, int type, int year, decimal amounts, string userCode, string password, object userState) {
            if ((this.AddCreditorsAmountsOperationCompleted == null)) {
                this.AddCreditorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditorsAmountsOperationCompleted);
            }
            this.InvokeAsync("AddCreditorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        userCode,
                        password}, this.AddCreditorsAmountsOperationCompleted, userState);
        }
        
        private void OnAddCreditorsAmountsOperationCompleted(object arg) {
            if ((this.AddCreditorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditorsAmountsCompleted(this, new AddCreditorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDebtorsAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDebtorsAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDebtorsAmounts(string universityCode, int type, int year, decimal amounts, string userCode, string password) {
            object[] results = this.Invoke("AddDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDebtorsAmountsAsync(string universityCode, int type, int year, decimal amounts, string userCode, string password) {
            this.AddDebtorsAmountsAsync(universityCode, type, year, amounts, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDebtorsAmountsAsync(string universityCode, int type, int year, decimal amounts, string userCode, string password, object userState) {
            if ((this.AddDebtorsAmountsOperationCompleted == null)) {
                this.AddDebtorsAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDebtorsAmountsOperationCompleted);
            }
            this.InvokeAsync("AddDebtorsAmounts", new object[] {
                        universityCode,
                        type,
                        year,
                        amounts,
                        userCode,
                        password}, this.AddDebtorsAmountsOperationCompleted, userState);
        }
        
        private void OnAddDebtorsAmountsOperationCompleted(object arg) {
            if ((this.AddDebtorsAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDebtorsAmountsCompleted(this, new AddDebtorsAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDisciplineCase(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password) {
            this.DeleteDisciplineCaseAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDisciplineCaseOperationCompleted == null)) {
                this.DeleteDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnDeleteDisciplineCaseOperationCompleted(object arg) {
            if ((this.DeleteDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDisciplineCaseCompleted(this, new DeleteDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAppeals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAppeals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAppeals(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteAppeals", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAppealsAsync(int entryNo, string user, string password) {
            this.DeleteAppealsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAppealsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteAppealsOperationCompleted == null)) {
                this.DeleteAppealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAppealsOperationCompleted);
            }
            this.InvokeAsync("DeleteAppeals", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteAppealsOperationCompleted, userState);
        }
        
        private void OnDeleteAppealsOperationCompleted(object arg) {
            if ((this.DeleteAppealsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAppealsCompleted(this, new DeleteAppealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteChancellors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password) {
            this.DeleteChancellorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteChancellorsOperationCompleted == null)) {
                this.DeleteChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChancellorsOperationCompleted);
            }
            this.InvokeAsync("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteChancellorsOperationCompleted, userState);
        }
        
        private void OnDeleteChancellorsOperationCompleted(object arg) {
            if ((this.DeleteChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChancellorsCompleted(this, new DeleteChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSponsors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password) {
            this.DeleteSponsorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSponsorsOperationCompleted == null)) {
                this.DeleteSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSponsorsOperationCompleted);
            }
            this.InvokeAsync("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSponsorsOperationCompleted, userState);
        }
        
        private void OnDeleteSponsorsOperationCompleted(object arg) {
            if ((this.DeleteSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSponsorsCompleted(this, new DeleteSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDepartments(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password) {
            this.DeleteDepartmentsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDepartmentsOperationCompleted == null)) {
                this.DeleteDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentsOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDepartmentsOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentsOperationCompleted(object arg) {
            if ((this.DeleteDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentsCompleted(this, new DeleteDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSchools", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSchools_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSchools(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password) {
            this.DeleteSchoolsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSchoolsOperationCompleted == null)) {
                this.DeleteSchoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchoolsOperationCompleted);
            }
            this.InvokeAsync("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSchoolsOperationCompleted, userState);
        }
        
        private void OnDeleteSchoolsOperationCompleted(object arg) {
            if ((this.DeleteSchoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchoolsCompleted(this, new DeleteSchoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAffiliations(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password) {
            this.DeleteAffiliationsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteAffiliationsOperationCompleted == null)) {
                this.DeleteAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAffiliationsOperationCompleted);
            }
            this.InvokeAsync("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteAffiliationsOperationCompleted, userState);
        }
        
        private void OnDeleteAffiliationsOperationCompleted(object arg) {
            if ((this.DeleteAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAffiliationsCompleted(this, new DeleteAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFinancialSubmission(string voteHead, decimal amount, string userCode, string password) {
            object[] results = this.Invoke("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password) {
            this.AddFinancialSubmissionAsync(voteHead, amount, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password, object userState) {
            if ((this.AddFinancialSubmissionOperationCompleted == null)) {
                this.AddFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password}, this.AddFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnAddFinancialSubmissionOperationCompleted(object arg) {
            if ((this.AddFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFinancialSubmissionCompleted(this, new AddFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFinancialSubmission(string voteHead, string userCode, string password) {
            object[] results = this.Invoke("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password) {
            this.DeleteFinancialSubmissionAsync(voteHead, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password, object userState) {
            if ((this.DeleteFinancialSubmissionOperationCompleted == null)) {
                this.DeleteFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password}, this.DeleteFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnDeleteFinancialSubmissionOperationCompleted(object arg) {
            if ((this.DeleteFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFinancialSubmissionCompleted(this, new DeleteFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddResearch(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            object[] results = this.Invoke("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            this.AddResearchAsync(category, domain, subdomain, campus, publicationType, title, description, link, patentingOrganisation, patentNo, patentYear, authorIds, userName, password, null);
        }
        
        /// <remarks/>
        public void AddResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password, object userState) {
            if ((this.AddResearchOperationCompleted == null)) {
                this.AddResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResearchOperationCompleted);
            }
            this.InvokeAsync("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password}, this.AddResearchOperationCompleted, userState);
        }
        
        private void OnAddResearchOperationCompleted(object arg) {
            if ((this.AddResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResearchCompleted(this, new AddResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUniversityChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUniversityChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUniversityChancellors(string universityCode, string chancellorName, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofAppointment, string nationality) {
            object[] results = this.Invoke("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality) {
            this.AddUniversityChancellorsAsync(universityCode, chancellorName, qualifications, dateofAppointment, nationality, null);
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality, object userState) {
            if ((this.AddUniversityChancellorsOperationCompleted == null)) {
                this.AddUniversityChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUniversityChancellorsOperationCompleted);
            }
            this.InvokeAsync("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality}, this.AddUniversityChancellorsOperationCompleted, userState);
        }
        
        private void OnAddUniversityChancellorsOperationCompleted(object arg) {
            if ((this.AddUniversityChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUniversityChancellorsCompleted(this, new AddUniversityChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentsResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentsResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentsResearch(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            object[] results = this.Invoke("AddStudentsResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentsResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            this.AddStudentsResearchAsync(category, domain, subdomain, campus, publicationType, title, description, link, patentingOrganisation, patentNo, patentYear, authorIds, userName, password, null);
        }
        
        /// <remarks/>
        public void AddStudentsResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password, object userState) {
            if ((this.AddStudentsResearchOperationCompleted == null)) {
                this.AddStudentsResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentsResearchOperationCompleted);
            }
            this.InvokeAsync("AddStudentsResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password}, this.AddStudentsResearchOperationCompleted, userState);
        }
        
        private void OnAddStudentsResearchOperationCompleted(object arg) {
            if ((this.AddStudentsResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentsResearchCompleted(this, new AddStudentsResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditResearch() {
            this.Invoke("EditResearch", new object[0]);
        }
        
        /// <remarks/>
        public void EditResearchAsync() {
            this.EditResearchAsync(null);
        }
        
        /// <remarks/>
        public void EditResearchAsync(object userState) {
            if ((this.EditResearchOperationCompleted == null)) {
                this.EditResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditResearchOperationCompleted);
            }
            this.InvokeAsync("EditResearch", new object[0], this.EditResearchOperationCompleted, userState);
        }
        
        private void OnEditResearchOperationCompleted(object arg) {
            if ((this.EditResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditResearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:RegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="RegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RegisterPeerReviewer(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.RegisterPeerReviewerAsync(name, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.RegisterPeerReviewerOperationCompleted == null)) {
                this.RegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.RegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.RegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterPeerReviewerCompleted(this, new RegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdatePeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdatePeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewer(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            this.UpdatePeerReviewerAsync(name, reviewerCode, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title, object userState) {
            if ((this.UpdatePeerReviewerOperationCompleted == null)) {
                this.UpdatePeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title}, this.UpdatePeerReviewerOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerCompleted(this, new UpdatePeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdatePeerReviewerPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdatePeerReviewerPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewerPassword(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            this.UpdatePeerReviewerPasswordAsync(vendorNumber, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.UpdatePeerReviewerPasswordOperationCompleted == null)) {
                this.UpdatePeerReviewerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.UpdatePeerReviewerPasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerPasswordOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerPasswordCompleted(this, new UpdatePeerReviewerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerAcademicQualifications(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            object[] results = this.Invoke("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            this.AddPeerAcademicQualificationsAsync(vendorNo, password, description, yearObtained, institution, areaOfSpecialization, durationOfStudy, country, null);
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country, object userState) {
            if ((this.AddPeerAcademicQualificationsOperationCompleted == null)) {
                this.AddPeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country}, this.AddPeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddPeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddPeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerAcademicQualificationsCompleted(this, new AddPeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerEmploymentRecord(string vendorNo, string password, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber) {
            object[] results = this.Invoke("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber) {
            this.AddPeerEmploymentRecordAsync(vendorNo, password, employer, postion, dateFrom, dateTo, contactPerson, address, email, phonenumber, null);
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber, object userState) {
            if ((this.AddPeerEmploymentRecordOperationCompleted == null)) {
                this.AddPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber}, this.AddPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnAddPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.AddPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerEmploymentRecordCompleted(this, new AddPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditPeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPeerEmploymentRecord(string vendorNo, string password, int recordCode, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson) {
            object[] results = this.Invoke("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson) {
            this.EditPeerEmploymentRecordAsync(vendorNo, password, recordCode, employer, postion, dateFrom, dateTo, contactPerson, null);
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, object userState) {
            if ((this.EditPeerEmploymentRecordOperationCompleted == null)) {
                this.EditPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson}, this.EditPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnEditPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.EditPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPeerEmploymentRecordCompleted(this, new EditPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePeerEmploymentRecord(string vendorNo, string password, int recordCode) {
            object[] results = this.Invoke("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, string password, int recordCode) {
            this.DeletePeerEmploymentRecordAsync(vendorNo, password, recordCode, null);
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, string password, int recordCode, object userState) {
            if ((this.DeletePeerEmploymentRecordOperationCompleted == null)) {
                this.DeletePeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        recordCode}, this.DeletePeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnDeletePeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.DeletePeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePeerEmploymentRecordCompleted(this, new DeletePeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInstitutionNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInstitutionNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInstitutionNumber(string userCode, string password) {
            object[] results = this.Invoke("GetInstitutionNumber", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password) {
            this.GetInstitutionNumberAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password, object userState) {
            if ((this.GetInstitutionNumberOperationCompleted == null)) {
                this.GetInstitutionNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstitutionNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstitutionNumber", new object[] {
                        userCode,
                        password}, this.GetInstitutionNumberOperationCompleted, userState);
        }
        
        private void OnGetInstitutionNumberOperationCompleted(object arg) {
            if ((this.GetInstitutionNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstitutionNumberCompleted(this, new GetInstitutionNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddOperationBudget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddOperationBudget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOperationBudget(decimal operationBudget, decimal actualExpenditure, int year, string userCode, string userPassword) {
            object[] results = this.Invoke("AddOperationBudget", new object[] {
                        operationBudget,
                        actualExpenditure,
                        year,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOperationBudgetAsync(decimal operationBudget, decimal actualExpenditure, int year, string userCode, string userPassword) {
            this.AddOperationBudgetAsync(operationBudget, actualExpenditure, year, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddOperationBudgetAsync(decimal operationBudget, decimal actualExpenditure, int year, string userCode, string userPassword, object userState) {
            if ((this.AddOperationBudgetOperationCompleted == null)) {
                this.AddOperationBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationBudgetOperationCompleted);
            }
            this.InvokeAsync("AddOperationBudget", new object[] {
                        operationBudget,
                        actualExpenditure,
                        year,
                        userCode,
                        userPassword}, this.AddOperationBudgetOperationCompleted, userState);
        }
        
        private void OnAddOperationBudgetOperationCompleted(object arg) {
            if ((this.AddOperationBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOperationBudgetCompleted(this, new AddOperationBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddResearchBudgetRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddResearchBudgetRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddResearchBudgetRecord(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, string userCode, string userPassword) {
            object[] results = this.Invoke("AddResearchBudgetRecord", new object[] {
                        researchBudgetAllocation,
                        researchActualExpenditure,
                        researchAttractedBudgetAllocation,
                        researchAttractedActualExpenditure,
                        year,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResearchBudgetRecordAsync(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, string userCode, string userPassword) {
            this.AddResearchBudgetRecordAsync(researchBudgetAllocation, researchActualExpenditure, researchAttractedBudgetAllocation, researchAttractedActualExpenditure, year, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddResearchBudgetRecordAsync(decimal researchBudgetAllocation, decimal researchActualExpenditure, decimal researchAttractedBudgetAllocation, decimal researchAttractedActualExpenditure, int year, string userCode, string userPassword, object userState) {
            if ((this.AddResearchBudgetRecordOperationCompleted == null)) {
                this.AddResearchBudgetRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResearchBudgetRecordOperationCompleted);
            }
            this.InvokeAsync("AddResearchBudgetRecord", new object[] {
                        researchBudgetAllocation,
                        researchActualExpenditure,
                        researchAttractedBudgetAllocation,
                        researchAttractedActualExpenditure,
                        year,
                        userCode,
                        userPassword}, this.AddResearchBudgetRecordOperationCompleted, userState);
        }
        
        private void OnAddResearchBudgetRecordOperationCompleted(object arg) {
            if ((this.AddResearchBudgetRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResearchBudgetRecordCompleted(this, new AddResearchBudgetRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCurrentAssetsLiabilitiesEqui" +
            "tytRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCurrentAssetsLiabilitiesEquitytRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurrentAssetsLiabilitiesEquitytRecord(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, string userCode, string userPassword) {
            object[] results = this.Invoke("AddCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        totaldebt,
                        totalequity,
                        currentassets,
                        currentliabilities,
                        year,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurrentAssetsLiabilitiesEquitytRecordAsync(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, string userCode, string userPassword) {
            this.AddCurrentAssetsLiabilitiesEquitytRecordAsync(totaldebt, totalequity, currentassets, currentliabilities, year, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddCurrentAssetsLiabilitiesEquitytRecordAsync(decimal totaldebt, decimal totalequity, decimal currentassets, decimal currentliabilities, int year, string userCode, string userPassword, object userState) {
            if ((this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted == null)) {
                this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted);
            }
            this.InvokeAsync("AddCurrentAssetsLiabilitiesEquitytRecord", new object[] {
                        totaldebt,
                        totalequity,
                        currentassets,
                        currentliabilities,
                        year,
                        userCode,
                        userPassword}, this.AddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted, userState);
        }
        
        private void OnAddCurrentAssetsLiabilitiesEquitytRecordOperationCompleted(object arg) {
            if ((this.AddCurrentAssetsLiabilitiesEquitytRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurrentAssetsLiabilitiesEquitytRecordCompleted(this, new AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLand(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.AddLandAsync(campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.AddLandOperationCompleted == null)) {
                this.AddLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLandOperationCompleted);
            }
            this.InvokeAsync("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.AddLandOperationCompleted, userState);
        }
        
        private void OnAddLandOperationCompleted(object arg) {
            if ((this.AddLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLandCompleted(this, new AddLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFire(string campus, string @class, string location, int devices, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime inspectiondate, string userCode, string userPassword) {
            object[] results = this.Invoke("AddFire", new object[] {
                        campus,
                        @class,
                        location,
                        devices,
                        inspectiondate,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFireAsync(string campus, string @class, string location, int devices, System.DateTime inspectiondate, string userCode, string userPassword) {
            this.AddFireAsync(campus, @class, location, devices, inspectiondate, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddFireAsync(string campus, string @class, string location, int devices, System.DateTime inspectiondate, string userCode, string userPassword, object userState) {
            if ((this.AddFireOperationCompleted == null)) {
                this.AddFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFireOperationCompleted);
            }
            this.InvokeAsync("AddFire", new object[] {
                        campus,
                        @class,
                        location,
                        devices,
                        inspectiondate,
                        userCode,
                        userPassword}, this.AddFireOperationCompleted, userState);
        }
        
        private void OnAddFireOperationCompleted(object arg) {
            if ((this.AddFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFireCompleted(this, new AddFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddEelevatedWater", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddEelevatedWater_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEelevatedWater(string campus, decimal volume, string userCode, string userPassword) {
            object[] results = this.Invoke("AddEelevatedWater", new object[] {
                        campus,
                        volume,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEelevatedWaterAsync(string campus, decimal volume, string userCode, string userPassword) {
            this.AddEelevatedWaterAsync(campus, volume, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddEelevatedWaterAsync(string campus, decimal volume, string userCode, string userPassword, object userState) {
            if ((this.AddEelevatedWaterOperationCompleted == null)) {
                this.AddEelevatedWaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEelevatedWaterOperationCompleted);
            }
            this.InvokeAsync("AddEelevatedWater", new object[] {
                        campus,
                        volume,
                        userCode,
                        userPassword}, this.AddEelevatedWaterOperationCompleted, userState);
        }
        
        private void OnAddEelevatedWaterOperationCompleted(object arg) {
            if ((this.AddEelevatedWaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEelevatedWaterCompleted(this, new AddEelevatedWaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUtilityService", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUtilityService_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUtilityService(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword) {
            object[] results = this.Invoke("AddUtilityService", new object[] {
                        campus,
                        utilticategory,
                        description,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUtilityServiceAsync(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword) {
            this.AddUtilityServiceAsync(campus, utilticategory, description, utilitystatus, capacity, serviceprovider, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddUtilityServiceAsync(string campus, string utilticategory, string description, string utilitystatus, string capacity, string serviceprovider, string userCode, string userPassword, object userState) {
            if ((this.AddUtilityServiceOperationCompleted == null)) {
                this.AddUtilityServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUtilityServiceOperationCompleted);
            }
            this.InvokeAsync("AddUtilityService", new object[] {
                        campus,
                        utilticategory,
                        description,
                        utilitystatus,
                        capacity,
                        serviceprovider,
                        userCode,
                        userPassword}, this.AddUtilityServiceOperationCompleted, userState);
        }
        
        private void OnAddUtilityServiceOperationCompleted(object arg) {
            if ((this.AddUtilityServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUtilityServiceCompleted(this, new AddUtilityServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPlantsEquipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPlantsEquipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPlantsEquipment(string campus, string category, int quantity, string location, string userCode, string userPassword) {
            object[] results = this.Invoke("AddPlantsEquipment", new object[] {
                        campus,
                        category,
                        quantity,
                        location,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPlantsEquipmentAsync(string campus, string category, int quantity, string location, string userCode, string userPassword) {
            this.AddPlantsEquipmentAsync(campus, category, quantity, location, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddPlantsEquipmentAsync(string campus, string category, int quantity, string location, string userCode, string userPassword, object userState) {
            if ((this.AddPlantsEquipmentOperationCompleted == null)) {
                this.AddPlantsEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPlantsEquipmentOperationCompleted);
            }
            this.InvokeAsync("AddPlantsEquipment", new object[] {
                        campus,
                        category,
                        quantity,
                        location,
                        userCode,
                        userPassword}, this.AddPlantsEquipmentOperationCompleted, userState);
        }
        
        private void OnAddPlantsEquipmentOperationCompleted(object arg) {
            if ((this.AddPlantsEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPlantsEquipmentCompleted(this, new AddPlantsEquipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddRecreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddRecreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddRecreation(string campus, string location, string category, int quantity, string ownership, string userCode, string userPassword) {
            object[] results = this.Invoke("AddRecreation", new object[] {
                        campus,
                        location,
                        category,
                        quantity,
                        ownership,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRecreationAsync(string campus, string location, string category, int quantity, string ownership, string userCode, string userPassword) {
            this.AddRecreationAsync(campus, location, category, quantity, ownership, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddRecreationAsync(string campus, string location, string category, int quantity, string ownership, string userCode, string userPassword, object userState) {
            if ((this.AddRecreationOperationCompleted == null)) {
                this.AddRecreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecreationOperationCompleted);
            }
            this.InvokeAsync("AddRecreation", new object[] {
                        campus,
                        location,
                        category,
                        quantity,
                        ownership,
                        userCode,
                        userPassword}, this.AddRecreationOperationCompleted, userState);
        }
        
        private void OnAddRecreationOperationCompleted(object arg) {
            if ((this.AddRecreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecreationCompleted(this, new AddRecreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSanitation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSanitation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSanitation(string campus, string sanitationtype, string name, string location, string userCode, string userPassword) {
            object[] results = this.Invoke("AddSanitation", new object[] {
                        campus,
                        sanitationtype,
                        name,
                        location,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSanitationAsync(string campus, string sanitationtype, string name, string location, string userCode, string userPassword) {
            this.AddSanitationAsync(campus, sanitationtype, name, location, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddSanitationAsync(string campus, string sanitationtype, string name, string location, string userCode, string userPassword, object userState) {
            if ((this.AddSanitationOperationCompleted == null)) {
                this.AddSanitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSanitationOperationCompleted);
            }
            this.InvokeAsync("AddSanitation", new object[] {
                        campus,
                        sanitationtype,
                        name,
                        location,
                        userCode,
                        userPassword}, this.AddSanitationOperationCompleted, userState);
        }
        
        private void OnAddSanitationOperationCompleted(object arg) {
            if ((this.AddSanitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSanitationCompleted(this, new AddSanitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAccessRoads", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAccessRoads_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAccessRoads(string campus, string roadstatus, string description, string distance, string userCode, string userPassword) {
            object[] results = this.Invoke("AddAccessRoads", new object[] {
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccessRoadsAsync(string campus, string roadstatus, string description, string distance, string userCode, string userPassword) {
            this.AddAccessRoadsAsync(campus, roadstatus, description, distance, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddAccessRoadsAsync(string campus, string roadstatus, string description, string distance, string userCode, string userPassword, object userState) {
            if ((this.AddAccessRoadsOperationCompleted == null)) {
                this.AddAccessRoadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccessRoadsOperationCompleted);
            }
            this.InvokeAsync("AddAccessRoads", new object[] {
                        campus,
                        roadstatus,
                        description,
                        distance,
                        userCode,
                        userPassword}, this.AddAccessRoadsOperationCompleted, userState);
        }
        
        private void OnAddAccessRoadsOperationCompleted(object arg) {
            if ((this.AddAccessRoadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccessRoadsCompleted(this, new AddAccessRoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibrary(string campus, string name, string capacity, string functionalareas, int noofVolumes, int noofTitles, string services, string librarybandwith, int nooflibrarystaff, string qualificationsofstaff, int noofcomputers, string dataaccesspoints, string userCode, string userPassword) {
            object[] results = this.Invoke("AddLibrary", new object[] {
                        campus,
                        name,
                        capacity,
                        functionalareas,
                        noofVolumes,
                        noofTitles,
                        services,
                        librarybandwith,
                        nooflibrarystaff,
                        qualificationsofstaff,
                        noofcomputers,
                        dataaccesspoints,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryAsync(string campus, string name, string capacity, string functionalareas, int noofVolumes, int noofTitles, string services, string librarybandwith, int nooflibrarystaff, string qualificationsofstaff, int noofcomputers, string dataaccesspoints, string userCode, string userPassword) {
            this.AddLibraryAsync(campus, name, capacity, functionalareas, noofVolumes, noofTitles, services, librarybandwith, nooflibrarystaff, qualificationsofstaff, noofcomputers, dataaccesspoints, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLibraryAsync(string campus, string name, string capacity, string functionalareas, int noofVolumes, int noofTitles, string services, string librarybandwith, int nooflibrarystaff, string qualificationsofstaff, int noofcomputers, string dataaccesspoints, string userCode, string userPassword, object userState) {
            if ((this.AddLibraryOperationCompleted == null)) {
                this.AddLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryOperationCompleted);
            }
            this.InvokeAsync("AddLibrary", new object[] {
                        campus,
                        name,
                        capacity,
                        functionalareas,
                        noofVolumes,
                        noofTitles,
                        services,
                        librarybandwith,
                        nooflibrarystaff,
                        qualificationsofstaff,
                        noofcomputers,
                        dataaccesspoints,
                        userCode,
                        userPassword}, this.AddLibraryOperationCompleted, userState);
        }
        
        private void OnAddLibraryOperationCompleted(object arg) {
            if ((this.AddLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryCompleted(this, new AddLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLand(int landCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword) {
            this.DeleteLandAsync(landCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLandOperationCompleted == null)) {
                this.DeleteLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLandOperationCompleted);
            }
            this.InvokeAsync("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword}, this.DeleteLandOperationCompleted, userState);
        }
        
        private void OnDeleteLandOperationCompleted(object arg) {
            if ((this.DeleteLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLandCompleted(this, new DeleteLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSanitation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSanitation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteSanitation(int sanitationCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteSanitation", new object[] {
                        sanitationCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSanitationAsync(int sanitationCode, string userCode, string userPassword) {
            this.DeleteSanitationAsync(sanitationCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteSanitationAsync(int sanitationCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteSanitationOperationCompleted == null)) {
                this.DeleteSanitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSanitationOperationCompleted);
            }
            this.InvokeAsync("DeleteSanitation", new object[] {
                        sanitationCode,
                        userCode,
                        userPassword}, this.DeleteSanitationOperationCompleted, userState);
        }
        
        private void OnDeleteSanitationOperationCompleted(object arg) {
            if ((this.DeleteSanitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSanitationCompleted(this, new DeleteSanitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteUtilityService", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteUtilityService_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteUtilityService(int utilityCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteUtilityService", new object[] {
                        utilityCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUtilityServiceAsync(int utilityCode, string userCode, string userPassword) {
            this.DeleteUtilityServiceAsync(utilityCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteUtilityServiceAsync(int utilityCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteUtilityServiceOperationCompleted == null)) {
                this.DeleteUtilityServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUtilityServiceOperationCompleted);
            }
            this.InvokeAsync("DeleteUtilityService", new object[] {
                        utilityCode,
                        userCode,
                        userPassword}, this.DeleteUtilityServiceOperationCompleted, userState);
        }
        
        private void OnDeleteUtilityServiceOperationCompleted(object arg) {
            if ((this.DeleteUtilityServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUtilityServiceCompleted(this, new DeleteUtilityServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibrary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibrary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibrary(int libraryCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLibrary", new object[] {
                        libraryCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryAsync(int libraryCode, string userCode, string userPassword) {
            this.DeleteLibraryAsync(libraryCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryAsync(int libraryCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLibraryOperationCompleted == null)) {
                this.DeleteLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryOperationCompleted);
            }
            this.InvokeAsync("DeleteLibrary", new object[] {
                        libraryCode,
                        userCode,
                        userPassword}, this.DeleteLibraryOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryOperationCompleted(object arg) {
            if ((this.DeleteLibraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryCompleted(this, new DeleteLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAccessRoads", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAccessRoads_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAccessRoads(int accessCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteAccessRoads", new object[] {
                        accessCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccessRoadsAsync(int accessCode, string userCode, string userPassword) {
            this.DeleteAccessRoadsAsync(accessCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteAccessRoadsAsync(int accessCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteAccessRoadsOperationCompleted == null)) {
                this.DeleteAccessRoadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccessRoadsOperationCompleted);
            }
            this.InvokeAsync("DeleteAccessRoads", new object[] {
                        accessCode,
                        userCode,
                        userPassword}, this.DeleteAccessRoadsOperationCompleted, userState);
        }
        
        private void OnDeleteAccessRoadsOperationCompleted(object arg) {
            if ((this.DeleteAccessRoadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccessRoadsCompleted(this, new DeleteAccessRoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteWasteManagement(int wasteCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteWasteManagement", new object[] {
                        wasteCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWasteManagementAsync(int wasteCode, string userCode, string userPassword) {
            this.DeleteWasteManagementAsync(wasteCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteWasteManagementAsync(int wasteCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteWasteManagementOperationCompleted == null)) {
                this.DeleteWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWasteManagementOperationCompleted);
            }
            this.InvokeAsync("DeleteWasteManagement", new object[] {
                        wasteCode,
                        userCode,
                        userPassword}, this.DeleteWasteManagementOperationCompleted, userState);
        }
        
        private void OnDeleteWasteManagementOperationCompleted(object arg) {
            if ((this.DeleteWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWasteManagementCompleted(this, new DeleteWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletePlantsEquipments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletePlantsEquipments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePlantsEquipments(int plantsCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeletePlantsEquipments", new object[] {
                        plantsCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePlantsEquipmentsAsync(int plantsCode, string userCode, string userPassword) {
            this.DeletePlantsEquipmentsAsync(plantsCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeletePlantsEquipmentsAsync(int plantsCode, string userCode, string userPassword, object userState) {
            if ((this.DeletePlantsEquipmentsOperationCompleted == null)) {
                this.DeletePlantsEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlantsEquipmentsOperationCompleted);
            }
            this.InvokeAsync("DeletePlantsEquipments", new object[] {
                        plantsCode,
                        userCode,
                        userPassword}, this.DeletePlantsEquipmentsOperationCompleted, userState);
        }
        
        private void OnDeletePlantsEquipmentsOperationCompleted(object arg) {
            if ((this.DeletePlantsEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlantsEquipmentsCompleted(this, new DeletePlantsEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteRecreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteRecreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRecreation(int recreationCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteRecreation", new object[] {
                        recreationCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecreationAsync(int recreationCode, string userCode, string userPassword) {
            this.DeleteRecreationAsync(recreationCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteRecreationAsync(int recreationCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteRecreationOperationCompleted == null)) {
                this.DeleteRecreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecreationOperationCompleted);
            }
            this.InvokeAsync("DeleteRecreation", new object[] {
                        recreationCode,
                        userCode,
                        userPassword}, this.DeleteRecreationOperationCompleted, userState);
        }
        
        private void OnDeleteRecreationOperationCompleted(object arg) {
            if ((this.DeleteRecreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecreationCompleted(this, new DeleteRecreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFire", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFire_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFire(int fireCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteFire", new object[] {
                        fireCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFireAsync(int fireCode, string userCode, string userPassword) {
            this.DeleteFireAsync(fireCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteFireAsync(int fireCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteFireOperationCompleted == null)) {
                this.DeleteFireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFireOperationCompleted);
            }
            this.InvokeAsync("DeleteFire", new object[] {
                        fireCode,
                        userCode,
                        userPassword}, this.DeleteFireOperationCompleted, userState);
        }
        
        private void OnDeleteFireOperationCompleted(object arg) {
            if ((this.DeleteFireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFireCompleted(this, new DeleteFireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBuilding(int buildingCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteBuilding", new object[] {
                        buildingCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBuildingAsync(int buildingCode, string userCode, string userPassword) {
            this.DeleteBuildingAsync(buildingCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteBuildingAsync(int buildingCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteBuildingOperationCompleted == null)) {
                this.DeleteBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBuildingOperationCompleted);
            }
            this.InvokeAsync("DeleteBuilding", new object[] {
                        buildingCode,
                        userCode,
                        userPassword}, this.DeleteBuildingOperationCompleted, userState);
        }
        
        private void OnDeleteBuildingOperationCompleted(object arg) {
            if ((this.DeleteBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBuildingCompleted(this, new DeleteBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteReference", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteReference_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteReference(int refcode, string accreditationNo, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteReference", new object[] {
                        refcode,
                        accreditationNo,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(int refcode, string accreditationNo, string userCode, string userPassword) {
            this.DeleteReferenceAsync(refcode, accreditationNo, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(int refcode, string accreditationNo, string userCode, string userPassword, object userState) {
            if ((this.DeleteReferenceOperationCompleted == null)) {
                this.DeleteReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferenceOperationCompleted);
            }
            this.InvokeAsync("DeleteReference", new object[] {
                        refcode,
                        accreditationNo,
                        userCode,
                        userPassword}, this.DeleteReferenceOperationCompleted, userState);
        }
        
        private void OnDeleteReferenceOperationCompleted(object arg) {
            if ((this.DeleteReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferenceCompleted(this, new DeleteReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLand(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.EditLandAsync(landCode, campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.EditLandOperationCompleted == null)) {
                this.EditLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLandOperationCompleted);
            }
            this.InvokeAsync("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.EditLandOperationCompleted, userState);
        }
        
        private void OnEditLandOperationCompleted(object arg) {
            if ((this.EditLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLandCompleted(this, new EditLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditChancellors(string universitycode, string name, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            object[] results = this.Invoke("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            this.EditChancellorsAsync(universitycode, name, qualifications, appointmentdate, nationality, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword, object userState) {
            if ((this.EditChancellorsOperationCompleted == null)) {
                this.EditChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditChancellorsOperationCompleted);
            }
            this.InvokeAsync("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword}, this.EditChancellorsOperationCompleted, userState);
        }
        
        private void OnEditChancellorsOperationCompleted(object arg) {
            if ((this.EditChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditChancellorsCompleted(this, new EditChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditAffiliations(string universitycode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditAffiliations", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, string name, string userCode, string userPassword) {
            this.EditAffiliationsAsync(universitycode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditAffiliationsOperationCompleted == null)) {
                this.EditAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAffiliationsOperationCompleted);
            }
            this.InvokeAsync("EditAffiliations", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword}, this.EditAffiliationsOperationCompleted, userState);
        }
        
        private void OnEditAffiliationsOperationCompleted(object arg) {
            if ((this.EditAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAffiliationsCompleted(this, new EditAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSponsor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSponsor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSponsor(string universitycode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword) {
            this.EditSponsorAsync(universitycode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSponsorOperationCompleted == null)) {
                this.EditSponsorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSponsorOperationCompleted);
            }
            this.InvokeAsync("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword}, this.EditSponsorOperationCompleted, userState);
        }
        
        private void OnEditSponsorOperationCompleted(object arg) {
            if ((this.EditSponsorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSponsorCompleted(this, new EditSponsorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditKeyMilestones", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditKeyMilestones_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditKeyMilestones(string universitycode, string year, string milestone, string userCode, string userPassword) {
            object[] results = this.Invoke("EditKeyMilestones", new object[] {
                        universitycode,
                        year,
                        milestone,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, string year, string milestone, string userCode, string userPassword) {
            this.EditKeyMilestonesAsync(universitycode, year, milestone, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, string year, string milestone, string userCode, string userPassword, object userState) {
            if ((this.EditKeyMilestonesOperationCompleted == null)) {
                this.EditKeyMilestonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditKeyMilestonesOperationCompleted);
            }
            this.InvokeAsync("EditKeyMilestones", new object[] {
                        universitycode,
                        year,
                        milestone,
                        userCode,
                        userPassword}, this.EditKeyMilestonesOperationCompleted, userState);
        }
        
        private void OnEditKeyMilestonesOperationCompleted(object arg) {
            if ((this.EditKeyMilestonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditKeyMilestonesCompleted(this, new EditKeyMilestonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSchool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSchool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSchool(string universitycode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSchool", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, string name, string userCode, string userPassword) {
            this.EditSchoolAsync(universitycode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSchoolOperationCompleted == null)) {
                this.EditSchoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSchoolOperationCompleted);
            }
            this.InvokeAsync("EditSchool", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword}, this.EditSchoolOperationCompleted, userState);
        }
        
        private void OnEditSchoolOperationCompleted(object arg) {
            if ((this.EditSchoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSchoolCompleted(this, new EditSchoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditDepartment(string universitycode, string school, string department, string userCode, string userPassword) {
            object[] results = this.Invoke("EditDepartment", new object[] {
                        universitycode,
                        school,
                        department,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, string school, string department, string userCode, string userPassword) {
            this.EditDepartmentAsync(universitycode, school, department, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, string school, string department, string userCode, string userPassword, object userState) {
            if ((this.EditDepartmentOperationCompleted == null)) {
                this.EditDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDepartmentOperationCompleted);
            }
            this.InvokeAsync("EditDepartment", new object[] {
                        universitycode,
                        school,
                        department,
                        userCode,
                        userPassword}, this.EditDepartmentOperationCompleted, userState);
        }
        
        private void OnEditDepartmentOperationCompleted(object arg) {
            if ((this.EditDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDepartmentCompleted(this, new EditDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGeneralDetails(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            object[] results = this.Invoke("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            this.EditGeneralDetailsAsync(universityCode, statusCategory, institutionSponsor, institutionEmailAddress, institutionPhoneNumber, institutionPostAddress, institutionPostCode, mainCampusCounty, mainCampusConstituency, mainCampusTown, null);
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown, object userState) {
            if ((this.EditGeneralDetailsOperationCompleted == null)) {
                this.EditGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown}, this.EditGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnEditGeneralDetailsOperationCompleted(object arg) {
            if ((this.EditGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGeneralDetailsCompleted(this, new EditGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMissionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMissionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMissionDetails(string universityCode, string mission, string vission, string aims) {
            object[] results = this.Invoke("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims) {
            this.AddMissionDetailsAsync(universityCode, mission, vission, aims, null);
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims, object userState) {
            if ((this.AddMissionDetailsOperationCompleted == null)) {
                this.AddMissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMissionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims}, this.AddMissionDetailsOperationCompleted, userState);
        }
        
        private void OnAddMissionDetailsOperationCompleted(object arg) {
            if ((this.AddMissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMissionDetailsCompleted(this, new AddMissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPhilosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPhilosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPhilosophy(string universityCode, string philosophicalbasis) {
            object[] results = this.Invoke("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis) {
            this.AddPhilosophyAsync(universityCode, philosophicalbasis, null);
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis, object userState) {
            if ((this.AddPhilosophyOperationCompleted == null)) {
                this.AddPhilosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPhilosophyOperationCompleted);
            }
            this.InvokeAsync("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis}, this.AddPhilosophyOperationCompleted, userState);
        }
        
        private void OnAddPhilosophyOperationCompleted(object arg) {
            if ((this.AddPhilosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPhilosophyCompleted(this, new AddPhilosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMilestone(string universityCode, string milestoneyear, string milestonedescription) {
            object[] results = this.Invoke("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription) {
            this.AddMilestoneAsync(universityCode, milestoneyear, milestonedescription, null);
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription, object userState) {
            if ((this.AddMilestoneOperationCompleted == null)) {
                this.AddMilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMilestoneOperationCompleted);
            }
            this.InvokeAsync("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription}, this.AddMilestoneOperationCompleted, userState);
        }
        
        private void OnAddMilestoneOperationCompleted(object arg) {
            if ((this.AddMilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMilestoneCompleted(this, new AddMilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAffiliations(string universityCode, string affiliationdescription) {
            object[] results = this.Invoke("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription) {
            this.AddAffiliationsAsync(universityCode, affiliationdescription, null);
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription, object userState) {
            if ((this.AddAffiliationsOperationCompleted == null)) {
                this.AddAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAffiliationsOperationCompleted);
            }
            this.InvokeAsync("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription}, this.AddAffiliationsOperationCompleted, userState);
        }
        
        private void OnAddAffiliationsOperationCompleted(object arg) {
            if ((this.AddAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAffiliationsCompleted(this, new AddAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddschoolFaculties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddschoolFaculties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddschoolFaculties(string universityCode, string facultydescription) {
            object[] results = this.Invoke("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription) {
            this.AddschoolFacultiesAsync(universityCode, facultydescription, null);
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription, object userState) {
            if ((this.AddschoolFacultiesOperationCompleted == null)) {
                this.AddschoolFacultiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddschoolFacultiesOperationCompleted);
            }
            this.InvokeAsync("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription}, this.AddschoolFacultiesOperationCompleted, userState);
        }
        
        private void OnAddschoolFacultiesOperationCompleted(object arg) {
            if ((this.AddschoolFacultiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddschoolFacultiesCompleted(this, new AddschoolFacultiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDepartments(string universityCode, string schoolcode, string departmentname) {
            object[] results = this.Invoke("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname) {
            this.AddDepartmentsAsync(universityCode, schoolcode, departmentname, null);
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname, object userState) {
            if ((this.AddDepartmentsOperationCompleted == null)) {
                this.AddDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDepartmentsOperationCompleted);
            }
            this.InvokeAsync("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname}, this.AddDepartmentsOperationCompleted, userState);
        }
        
        private void OnAddDepartmentsOperationCompleted(object arg) {
            if ((this.AddDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDepartmentsCompleted(this, new AddDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSponsors(string universityCode, string sponsorname) {
            object[] results = this.Invoke("AddSponsors", new object[] {
                        universityCode,
                        sponsorname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname) {
            this.AddSponsorsAsync(universityCode, sponsorname, null);
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname, object userState) {
            if ((this.AddSponsorsOperationCompleted == null)) {
                this.AddSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSponsorsOperationCompleted);
            }
            this.InvokeAsync("AddSponsors", new object[] {
                        universityCode,
                        sponsorname}, this.AddSponsorsOperationCompleted, userState);
        }
        
        private void OnAddSponsorsOperationCompleted(object arg) {
            if ((this.AddSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSponsorsCompleted(this, new AddSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHistory(string universityCode, string history) {
            object[] results = this.Invoke("AddHistory", new object[] {
                        universityCode,
                        history});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history) {
            this.AddHistoryAsync(universityCode, history, null);
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history, object userState) {
            if ((this.AddHistoryOperationCompleted == null)) {
                this.AddHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHistoryOperationCompleted);
            }
            this.InvokeAsync("AddHistory", new object[] {
                        universityCode,
                        history}, this.AddHistoryOperationCompleted, userState);
        }
        
        private void OnAddHistoryOperationCompleted(object arg) {
            if ((this.AddHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHistoryCompleted(this, new AddHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditVCDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditVCDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditVCDetails(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            object[] results = this.Invoke("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            this.EditVCDetailsAsync(universityCode, vcName, vcHighestAcademicLevel, vcDomainOfSpecialization, vcOfficialEmail, vcOfficialPhone, null);
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone, object userState) {
            if ((this.EditVCDetailsOperationCompleted == null)) {
                this.EditVCDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditVCDetailsOperationCompleted);
            }
            this.InvokeAsync("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone}, this.EditVCDetailsOperationCompleted, userState);
        }
        
        private void OnEditVCDetailsOperationCompleted(object arg) {
            if ((this.EditVCDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditVCDetailsCompleted(this, new EditVCDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryStaff(string username, string password, string idNo, string firstName, string middleName, string lastName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, string position, int highestAcademicQualification, string campusCode) {
            object[] results = this.Invoke("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        campusCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(string username, string password, string idNo, string firstName, string middleName, string lastName, System.DateTime dob, string position, int highestAcademicQualification, string campusCode) {
            this.AddLibraryStaffAsync(username, password, idNo, firstName, middleName, lastName, dob, position, highestAcademicQualification, campusCode, null);
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(string username, string password, string idNo, string firstName, string middleName, string lastName, System.DateTime dob, string position, int highestAcademicQualification, string campusCode, object userState) {
            if ((this.AddLibraryStaffOperationCompleted == null)) {
                this.AddLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        campusCode}, this.AddLibraryStaffOperationCompleted, userState);
        }
        
        private void OnAddLibraryStaffOperationCompleted(object arg) {
            if ((this.AddLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryStaffCompleted(this, new AddLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryStaff(string universityCode, string staffId) {
            object[] results = this.Invoke("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, string staffId) {
            this.DeleteLibraryStaffAsync(universityCode, staffId, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, string staffId, object userState) {
            if ((this.DeleteLibraryStaffOperationCompleted == null)) {
                this.DeleteLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId}, this.DeleteLibraryStaffOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryStaffOperationCompleted(object arg) {
            if ((this.DeleteLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryStaffCompleted(this, new DeleteLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduation(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime graduationDate, string userCode, string password) {
            object[] results = this.Invoke("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password) {
            this.AddGraduationAsync(idNo, admissionNumber, firstName, middleName, lastName, programCode, credit, graduationDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password, object userState) {
            if ((this.AddGraduationOperationCompleted == null)) {
                this.AddGraduationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduationOperationCompleted);
            }
            this.InvokeAsync("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password}, this.AddGraduationOperationCompleted, userState);
        }
        
        private void OnAddGraduationOperationCompleted(object arg) {
            if ((this.AddGraduationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduationCompleted(this, new AddGraduationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password) {
            this.SendApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendApprovalRequestOperationCompleted == null)) {
                this.SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendApprovalRequestOperationCompleted(object arg) {
            if ((this.SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalRequestCompleted(this, new SendApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendProgramApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendProgramApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendProgramApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password) {
            this.SendProgramApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendProgramApprovalRequestOperationCompleted == null)) {
                this.SendProgramApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProgramApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendProgramApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendProgramApprovalRequestOperationCompleted(object arg) {
            if ((this.SendProgramApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProgramApprovalRequestCompleted(this, new SendProgramApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveRejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveRejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectRequestOperationCompleted == null)) {
                this.ApproveRejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectRequestCompleted(this, new ApproveRejectRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveRejectProgramRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveRejectProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectProgramRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectProgramRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectProgramRequestOperationCompleted == null)) {
                this.ApproveRejectProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectProgramRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectProgramRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectProgramRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectProgramRequestCompleted(this, new ApproveRejectProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelApprovalProgramRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelApprovalProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalProgramRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalProgramRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalProgramRequestOperationCompleted == null)) {
                this.CancelApprovalProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalProgramRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalProgramRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalProgramRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalProgramRequestCompleted(this, new CancelApprovalProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalRequestOperationCompleted == null)) {
                this.CancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalRequestCompleted(this, new CancelApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBuilding(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password) {
            object[] results = this.Invoke("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password) {
            this.AddBuildingAsync(campus, category, description, capacity, numberOfFloors, sizeSqMetres, location, provisionPWD, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password, object userState) {
            if ((this.AddBuildingOperationCompleted == null)) {
                this.AddBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBuildingOperationCompleted);
            }
            this.InvokeAsync("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        userCode,
                        password}, this.AddBuildingOperationCompleted, userState);
        }
        
        private void OnAddBuildingOperationCompleted(object arg) {
            if ((this.AddBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBuildingCompleted(this, new AddBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddWasteManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddWasteManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddWasteManagement(string campus, string category, string disposalmethod, string hazardousmaterial, string userCode, string password) {
            object[] results = this.Invoke("AddWasteManagement", new object[] {
                        campus,
                        category,
                        disposalmethod,
                        hazardousmaterial,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWasteManagementAsync(string campus, string category, string disposalmethod, string hazardousmaterial, string userCode, string password) {
            this.AddWasteManagementAsync(campus, category, disposalmethod, hazardousmaterial, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddWasteManagementAsync(string campus, string category, string disposalmethod, string hazardousmaterial, string userCode, string password, object userState) {
            if ((this.AddWasteManagementOperationCompleted == null)) {
                this.AddWasteManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWasteManagementOperationCompleted);
            }
            this.InvokeAsync("AddWasteManagement", new object[] {
                        campus,
                        category,
                        disposalmethod,
                        hazardousmaterial,
                        userCode,
                        password}, this.AddWasteManagementOperationCompleted, userState);
        }
        
        private void OnAddWasteManagementOperationCompleted(object arg) {
            if ((this.AddWasteManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWasteManagementCompleted(this, new AddWasteManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AccreditationGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AccreditationGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationGeneralDetails(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            this.AccreditationGeneralDetailsAsync(accreditationNo, campus, programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, studentspolicy, userCode, password, null);
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(
                    string accreditationNo, 
                    string campus, 
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AccreditationGeneralDetailsOperationCompleted == null)) {
                this.AccreditationGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password}, this.AccreditationGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnAccreditationGeneralDetailsOperationCompleted(object arg) {
            if ((this.AccreditationGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationGeneralDetailsCompleted(this, new AccreditationGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InitialGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InitialGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InitialGeneralDetails(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            this.InitialGeneralDetailsAsync(programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, studentspolicy, userCode, password, null);
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.InitialGeneralDetailsOperationCompleted == null)) {
                this.InitialGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitialGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password}, this.InitialGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnInitialGeneralDetailsOperationCompleted(object arg) {
            if ((this.InitialGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitialGeneralDetailsCompleted(this, new InitialGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNewPrograms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNewPrograms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNewPrograms(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddNewPrograms", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        rationale,
                        learningoutcome,
                        specialization,
                        modeofdelivery,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewProgramsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password) {
            this.AddNewProgramsAsync(programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, rationale, learningoutcome, specialization, modeofdelivery, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNewProgramsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    string totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string rationale, 
                    string learningoutcome, 
                    string specialization, 
                    string modeofdelivery, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddNewProgramsOperationCompleted == null)) {
                this.AddNewProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewProgramsOperationCompleted);
            }
            this.InvokeAsync("AddNewPrograms", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        rationale,
                        learningoutcome,
                        specialization,
                        modeofdelivery,
                        userCode,
                        password}, this.AddNewProgramsOperationCompleted, userState);
        }
        
        private void OnAddNewProgramsOperationCompleted(object arg) {
            if ((this.AddNewProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewProgramsCompleted(this, new AddNewProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationale(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleOperationCompleted == null)) {
                this.AddProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleOperationCompleted(object arg) {
            if ((this.AddProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleCompleted(this, new AddProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateProgramRationale(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password) {
            this.ValidateProgramRationaleAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateProgramRationaleOperationCompleted == null)) {
                this.ValidateProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateProgramRationaleOperationCompleted, userState);
        }
        
        private void OnValidateProgramRationaleOperationCompleted(object arg) {
            if ((this.ValidateProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateProgramRationaleCompleted(this, new ValidateProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationaleEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationaleEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationaleEntry(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationaleEntry", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleEntryAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleEntryAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleEntryAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleEntryOperationCompleted == null)) {
                this.AddProgramRationaleEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleEntryOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationaleEntry", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleEntryOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleEntryOperationCompleted(object arg) {
            if ((this.AddProgramRationaleEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleEntryCompleted(this, new AddProgramRationaleEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditProgramRationale(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.EditProgramRationaleAsync(rationaleCode, accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.EditProgramRationaleOperationCompleted == null)) {
                this.EditProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.EditProgramRationaleOperationCompleted, userState);
        }
        
        private void OnEditProgramRationaleOperationCompleted(object arg) {
            if ((this.EditProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProgramRationaleCompleted(this, new EditProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSpecializationAreas(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            object[] results = this.Invoke("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            this.EditSpecializationAreasAsync(specializationCode, accreditationNo, specializationarea, specializationdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password, object userState) {
            if ((this.EditSpecializationAreasOperationCompleted == null)) {
                this.EditSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password}, this.EditSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnEditSpecializationAreasOperationCompleted(object arg) {
            if ((this.EditSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSpecializationAreasCompleted(this, new EditSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgramRationale(int rationaleCode, string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password) {
            this.DeleteProgramRationaleAsync(rationaleCode, accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password, object userState) {
            if ((this.DeleteProgramRationaleOperationCompleted == null)) {
                this.DeleteProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password}, this.DeleteProgramRationaleOperationCompleted, userState);
        }
        
        private void OnDeleteProgramRationaleOperationCompleted(object arg) {
            if ((this.DeleteProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramRationaleCompleted(this, new DeleteProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLearningOutcomeCompletedEventHandler(object sender, AddLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateLearningOutcomeCompletedEventHandler(object sender, ValidateLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateLearningOutcome2CompletedEventHandler(object sender, ValidateLearningOutcome2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLearningOutcome2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLearningOutcome2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLearningOutcomeEntryCompletedEventHandler(object sender, AddLearningOutcomeEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSpecializationAreasCompletedEventHandler(object sender, AddSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateSpecializationAreasCompletedEventHandler(object sender, ValidateSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSpecializationAreasEntryCompletedEventHandler(object sender, AddSpecializationAreasEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecializationAreasEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecializationAreasEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditLearningOutcomeCompletedEventHandler(object sender, EditLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLearningOutcomeCompletedEventHandler(object sender, DeleteLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSpecializationAreaCompletedEventHandler(object sender, DeleteSpecializationAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpecializationAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpecializationAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDeliveryModeCompletedEventHandler(object sender, AddDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VlidateDeliveryModeCompletedEventHandler(object sender, VlidateDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VlidateDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VlidateDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VlidateDeliveryMode2CompletedEventHandler(object sender, VlidateDeliveryMode2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VlidateDeliveryMode2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VlidateDeliveryMode2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDeliveryModeCompletedEventHandler(object sender, DeleteDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddGradingSystemCompletedEventHandler(object sender, AddGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateGradingSystemCompletedEventHandler(object sender, ValidateGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateGradingSystem2CompletedEventHandler(object sender, ValidateGradingSystem2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGradingSystem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGradingSystem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditGradingSystemCompletedEventHandler(object sender, EditGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGradingSystemCompletedEventHandler(object sender, DeleteGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUnitCompletedEventHandler(object sender, AddUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateUnitCompletedEventHandler(object sender, ValidateUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUnitEntryCompletedEventHandler(object sender, AddUnitEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditUnitCompletedEventHandler(object sender, EditUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUnitCompletedEventHandler(object sender, DeleteUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddInstructionalMethodCompletedEventHandler(object sender, AddInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateInstructionalMethodCompletedEventHandler(object sender, ValidateInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddInstructionalMethodEntryCompletedEventHandler(object sender, AddInstructionalMethodEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteInstructionalMethodCompletedEventHandler(object sender, DeleteInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCourseLearningOutcomeCompletedEventHandler(object sender, AddCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateCourseLearningOutcomeCompletedEventHandler(object sender, ValidateCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCourseLearningOutcomeEntryCompletedEventHandler(object sender, AddCourseLearningOutcomeEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditCourseLearningOutcomeCompletedEventHandler(object sender, EditCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteCourseLearningOutcomeCompletedEventHandler(object sender, DeleteCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBookCompletedEventHandler(object sender, AddBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateBookCompletedEventHandler(object sender, ValidateBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBookEntryCompletedEventHandler(object sender, AddBookEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditBookCompletedEventHandler(object sender, EditBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBookCompletedEventHandler(object sender, DeleteBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SaveDocumentsPaymentCompletedEventHandler(object sender, SaveDocumentsPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentsPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentsPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ConfirmPaymentsProgrammeCompletedEventHandler(object sender, ConfirmPaymentsProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FngeneratecodesCompletedEventHandler(object sender, FngeneratecodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngeneratecodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngeneratecodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddKnownStakeHolderCompletedEventHandler(object sender, AddKnownStakeHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKnownStakeHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKnownStakeHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddNewStakeHolderCompletedEventHandler(object sender, AddNewStakeHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewStakeHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewStakeHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStrengthOrWeaknessCompletedEventHandler(object sender, AddStrengthOrWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStrengthOrWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStrengthOrWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSARCommitteesComposition1CompletedEventHandler(object sender, AddSARCommitteesComposition1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesComposition1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesComposition1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSARCommitteesCompositionCompletedEventHandler(object sender, AddSARCommitteesCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddTrusteeSenateCompositionCompletedEventHandler(object sender, AddTrusteeSenateCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrusteeSenateCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrusteeSenateCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddHRSummaryCompletedEventHandler(object sender, AddHRSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHRSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHRSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDevelopmentTrainingCompletedEventHandler(object sender, AddDevelopmentTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDevelopmentTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDevelopmentTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSchoolCompletedEventHandler(object sender, AddSchoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSchoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSchoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSchoolDepartmentCompletedEventHandler(object sender, AddSchoolDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSchoolDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSchoolDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSourceOfIncomeCompletedEventHandler(object sender, AddSourceOfIncomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSourceOfIncomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSourceOfIncomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCreditorsDebtorsCompletedEventHandler(object sender, AddCreditorsDebtorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditorsDebtorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditorsDebtorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddActualBudgetCompletedEventHandler(object sender, AddActualBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddActualBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddActualBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDebtEquityCurrentAssetsLiabilitiesCompletedEventHandler(object sender, AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDebtEquityCurrentAssetsLiabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddQaAcademicProgrammeCompletedEventHandler(object sender, AddQaAcademicProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaAcademicProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaAcademicProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddQaCollaboratingAcademicProgrammeCompletedEventHandler(object sender, AddQaCollaboratingAcademicProgrammeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaCollaboratingAcademicProgrammeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaCollaboratingAcademicProgrammeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddQaProgrammeSummaryCompletedEventHandler(object sender, AddQaProgrammeSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQaProgrammeSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQaProgrammeSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddKenyanInternationalStudentsCompletedEventHandler(object sender, AddKenyanInternationalStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKenyanInternationalStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKenyanInternationalStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAcademicStaffQualityCompletedEventHandler(object sender, AddAcademicStaffQualityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffQualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffQualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AcceptRejectPeerReviewerJobCompletedEventHandler(object sender, AcceptRejectPeerReviewerJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptRejectPeerReviewerJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptRejectPeerReviewerJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPeerReviewersEvaluationCompletedEventHandler(object sender, AddPeerReviewersEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerReviewersEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerReviewersEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FnEditPeerReviewersEvaluationCompletedEventHandler(object sender, FnEditPeerReviewersEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPeerReviewersEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPeerReviewersEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FnSendPeerApprovalRequestCompletedEventHandler(object sender, FnSendPeerApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FnRegisterPeerReviewerCompletedEventHandler(object sender, FnRegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FnGetVendornNumberCompletedEventHandler(object sender, FnGetVendornNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetVendornNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetVendornNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApplicationNumberCompletedEventHandler(object sender, GetApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProgramAccreditationAlertCompletedEventHandler(object sender, ProgramAccreditationAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramAccreditationAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramAccreditationAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProgramApplicationNumberCompletedEventHandler(object sender, GetProgramApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InstitutionCreateinvoiceCompletedEventHandler(object sender, InstitutionCreateinvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionCreateinvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionCreateinvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCommentsCompletedEventHandler(object sender, AddCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProgramConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStudentDraftCompletedEventHandler(object sender, AddStudentDraftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentDraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentDraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteStudentCompletedEventHandler(object sender, DeleteStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditSanitationsCompletedEventHandler(object sender, EditSanitationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSanitationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSanitationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditUtilityCompletedEventHandler(object sender, EditUtilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUtilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUtilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditBuildingCompletedEventHandler(object sender, EditBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditFireCompletedEventHandler(object sender, EditFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditRoadAccessCompletedEventHandler(object sender, EditRoadAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditRoadAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditRoadAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditRecreatonalCompletedEventHandler(object sender, EditRecreatonalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditRecreatonalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditRecreatonalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditPlantsEquipmentsCompletedEventHandler(object sender, EditPlantsEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPlantsEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPlantsEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditWasteManagementCompletedEventHandler(object sender, EditWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditLibraryCompletedEventHandler(object sender, EditLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAdminSpaceCompletedEventHandler(object sender, AddAdminSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdminSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdminSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InstitutionSignupCompletedEventHandler(object sender, InstitutionSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApplyForAccreditationCompletedEventHandler(object sender, ApplyForAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApplyForProgramAccreditationCompletedEventHandler(object sender, ApplyForProgramAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForProgramAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForProgramAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAcademicStaffCompletedEventHandler(object sender, AddAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAcademicStaffCompletedEventHandler(object sender, DeleteAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddNonAcademicStaffCompletedEventHandler(object sender, AddNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPartTimeAcademicStaffCompletedEventHandler(object sender, AddPartTimeAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPartTimeAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPartTimeAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteNonAcademicStaffCompletedEventHandler(object sender, DeleteNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePartTimeAcademicStaffCompletedEventHandler(object sender, DeletePartTimeAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePartTimeAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePartTimeAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteResearchCompletedEventHandler(object sender, DeleteResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteStudentsResearchCompletedEventHandler(object sender, DeleteStudentsResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentsResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentsResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddInitialProgramsCompletedEventHandler(object sender, AddInitialProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInitialProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInitialProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddReferenceMaterialCompletedEventHandler(object sender, AddReferenceMaterialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReferenceMaterialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReferenceMaterialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDisciplineCaseCompletedEventHandler(object sender, AddDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSuccessfulAppealsCompletedEventHandler(object sender, AddSuccessfulAppealsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSuccessfulAppealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSuccessfulAppealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditDisciplineCaseCompletedEventHandler(object sender, EditDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddExpectedActualAmountsCompletedEventHandler(object sender, AddExpectedActualAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExpectedActualAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExpectedActualAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCreditorsAmountsCompletedEventHandler(object sender, AddCreditorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDebtorsAmountsCompletedEventHandler(object sender, AddDebtorsAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDebtorsAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDebtorsAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDisciplineCaseCompletedEventHandler(object sender, DeleteDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAppealsCompletedEventHandler(object sender, DeleteAppealsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAppealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAppealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteChancellorsCompletedEventHandler(object sender, DeleteChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSponsorsCompletedEventHandler(object sender, DeleteSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDepartmentsCompletedEventHandler(object sender, DeleteDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSchoolsCompletedEventHandler(object sender, DeleteSchoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAffiliationsCompletedEventHandler(object sender, DeleteAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddFinancialSubmissionCompletedEventHandler(object sender, AddFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFinancialSubmissionCompletedEventHandler(object sender, DeleteFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddResearchCompletedEventHandler(object sender, AddResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUniversityChancellorsCompletedEventHandler(object sender, AddUniversityChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUniversityChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUniversityChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStudentsResearchCompletedEventHandler(object sender, AddStudentsResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentsResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentsResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditResearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterPeerReviewerCompletedEventHandler(object sender, RegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePeerReviewerCompletedEventHandler(object sender, UpdatePeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePeerReviewerPasswordCompletedEventHandler(object sender, UpdatePeerReviewerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPeerAcademicQualificationsCompletedEventHandler(object sender, AddPeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPeerEmploymentRecordCompletedEventHandler(object sender, AddPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditPeerEmploymentRecordCompletedEventHandler(object sender, EditPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePeerEmploymentRecordCompletedEventHandler(object sender, DeletePeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInstitutionNumberCompletedEventHandler(object sender, GetInstitutionNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstitutionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstitutionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddOperationBudgetCompletedEventHandler(object sender, AddOperationBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOperationBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOperationBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddResearchBudgetRecordCompletedEventHandler(object sender, AddResearchBudgetRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResearchBudgetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResearchBudgetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventHandler(object sender, AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurrentAssetsLiabilitiesEquitytRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLandCompletedEventHandler(object sender, AddLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddFireCompletedEventHandler(object sender, AddFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddEelevatedWaterCompletedEventHandler(object sender, AddEelevatedWaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEelevatedWaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEelevatedWaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUtilityServiceCompletedEventHandler(object sender, AddUtilityServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUtilityServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUtilityServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPlantsEquipmentCompletedEventHandler(object sender, AddPlantsEquipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPlantsEquipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPlantsEquipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddRecreationCompletedEventHandler(object sender, AddRecreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSanitationCompletedEventHandler(object sender, AddSanitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSanitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSanitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAccessRoadsCompletedEventHandler(object sender, AddAccessRoadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccessRoadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccessRoadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLibraryCompletedEventHandler(object sender, AddLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLandCompletedEventHandler(object sender, DeleteLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSanitationCompletedEventHandler(object sender, DeleteSanitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSanitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSanitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteUtilityServiceCompletedEventHandler(object sender, DeleteUtilityServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUtilityServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUtilityServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLibraryCompletedEventHandler(object sender, DeleteLibraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAccessRoadsCompletedEventHandler(object sender, DeleteAccessRoadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccessRoadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccessRoadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteWasteManagementCompletedEventHandler(object sender, DeleteWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeletePlantsEquipmentsCompletedEventHandler(object sender, DeletePlantsEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePlantsEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePlantsEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteRecreationCompletedEventHandler(object sender, DeleteRecreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFireCompletedEventHandler(object sender, DeleteFireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBuildingCompletedEventHandler(object sender, DeleteBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteReferenceCompletedEventHandler(object sender, DeleteReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditLandCompletedEventHandler(object sender, EditLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditChancellorsCompletedEventHandler(object sender, EditChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditAffiliationsCompletedEventHandler(object sender, EditAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditSponsorCompletedEventHandler(object sender, EditSponsorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSponsorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSponsorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditKeyMilestonesCompletedEventHandler(object sender, EditKeyMilestonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditKeyMilestonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditKeyMilestonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditSchoolCompletedEventHandler(object sender, EditSchoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSchoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSchoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditDepartmentCompletedEventHandler(object sender, EditDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditGeneralDetailsCompletedEventHandler(object sender, EditGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddMissionDetailsCompletedEventHandler(object sender, AddMissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPhilosophyCompletedEventHandler(object sender, AddPhilosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPhilosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPhilosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddMilestoneCompletedEventHandler(object sender, AddMilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAffiliationsCompletedEventHandler(object sender, AddAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddschoolFacultiesCompletedEventHandler(object sender, AddschoolFacultiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddschoolFacultiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddschoolFacultiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDepartmentsCompletedEventHandler(object sender, AddDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSponsorsCompletedEventHandler(object sender, AddSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddHistoryCompletedEventHandler(object sender, AddHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditVCDetailsCompletedEventHandler(object sender, EditVCDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditVCDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditVCDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLibraryStaffCompletedEventHandler(object sender, AddLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLibraryStaffCompletedEventHandler(object sender, DeleteLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddGraduationCompletedEventHandler(object sender, AddGraduationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendApprovalRequestCompletedEventHandler(object sender, SendApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendProgramApprovalRequestCompletedEventHandler(object sender, SendProgramApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProgramApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProgramApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveRejectRequestCompletedEventHandler(object sender, ApproveRejectRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveRejectProgramRequestCompletedEventHandler(object sender, ApproveRejectProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelApprovalProgramRequestCompletedEventHandler(object sender, CancelApprovalProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelApprovalRequestCompletedEventHandler(object sender, CancelApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBuildingCompletedEventHandler(object sender, AddBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddWasteManagementCompletedEventHandler(object sender, AddWasteManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWasteManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWasteManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AccreditationGeneralDetailsCompletedEventHandler(object sender, AccreditationGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InitialGeneralDetailsCompletedEventHandler(object sender, InitialGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitialGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitialGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddNewProgramsCompletedEventHandler(object sender, AddNewProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddProgramRationaleCompletedEventHandler(object sender, AddProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateProgramRationaleCompletedEventHandler(object sender, ValidateProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddProgramRationaleEntryCompletedEventHandler(object sender, AddProgramRationaleEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditProgramRationaleCompletedEventHandler(object sender, EditProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditSpecializationAreasCompletedEventHandler(object sender, EditSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteProgramRationaleCompletedEventHandler(object sender, DeleteProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591